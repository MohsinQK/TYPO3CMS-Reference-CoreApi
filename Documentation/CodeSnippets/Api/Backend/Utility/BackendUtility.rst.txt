.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Backend\Utility

.. php:class:: BackendUtility

   Standard functions available for the TYPO3 backend.
   
   You are encouraged to use this class in your own applications (Backend Modules)
   Don't instantiate - call functions with "\TYPO3\CMS\Backend\Utility\BackendUtility::" prefixed the function name.
   
   Call ALL methods without making an object!
   Eg. to get a page-record 51 do this: '\TYPO3\CMS\Backend\Utility\BackendUtility::getRecord('pages',51)'
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php>`__.

   .. php:method:: getRecord(string $table, int|string $uid, string $fields, string $where, bool $useDeleteClause)
   
      Gets record with uid = $uid from $table
      You can set $field to a list of fields (default is '*')
      Additional WHERE clauses can be added by $where (fx. ' AND some_field = 1')
      Will automatically check if records has been deleted and if so, not return anything.
      
      $table must be found in $GLOBALS['TCA']
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L96>`__.
      
      :param string $table: Table name present in $GLOBALS['TCA']
      :param int|string $uid: UID of record
      :param string $fields: List of fields to select
      :param string $where: Additional WHERE clause, eg. ' AND some_field = 0'
      :param bool $useDeleteClause: Use the deleteClause to check if a record is deleted (default TRUE)
      :returntype: array
      :returns: Returns the row if found, otherwise NULL
      
   .. php:method:: getRecordWSOL(string $table, int $uid, string $fields, string $where, bool $useDeleteClause, bool $unsetMovePointers)
   
      Like getRecord(), but overlays workspace version if any.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L140>`__.
      
      :param string $table: Table name present in $GLOBALS['TCA']
      :param int $uid: UID of record
      :param string $fields: List of fields to select
      :param string $where: Additional WHERE clause, eg. ' AND some_field = 0'
      :param bool $useDeleteClause: Use the deleteClause to check if a record is deleted (default TRUE)
      :param bool $unsetMovePointers: If TRUE the function does not return a "pointer" row for moved records in a workspace
      :returntype: array
      :returns: Returns the row if found, else NULL
      
   .. php:method:: getRecordLocalization(string $table, int $uid, int $language, string $andWhereClause)
   
      Fetches the localization for a given record.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L290>`__.
      
      :param string $table: Table name present in $GLOBALS['TCA']
      :param int $uid: The uid of the record
      :param int $language: The id of the site language
      :param string $andWhereClause: Optional additional WHERE clause (default: '')
      
   .. php:method:: BEgetRootLine(int $uid, string $clause, bool $workspaceOL, string[] $additionalFields)
   
      Returns what is called the 'RootLine'. That is an array with information about the page records from a page id
      ($uid) and back to the root.
      
      By default deleted pages are filtered.
      This RootLine will follow the tree all the way to the root. This is opposite to another kind of root line known
      from the frontend where the rootline stops when a root-template is found.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L348>`__.
      
      :param int $uid: Page id for which to create the root line.
      :param string $clause: Clause can be used to select other criteria. It would typically be where-clauses that
      stops the process if we meet a page, the user has no reading access to.
      :param bool $workspaceOL: If TRUE, version overlay is applied. This must be requested specifically because it is
      usually only wanted when the rootline is used for visual output while for permission checking you want the raw thing!
      :param string[] $additionalFields: Additional Fields to select for rootline records
      
   .. php:method:: getRecordPath(int $uid, string $clause, int $titleLimit, int $fullTitleLimit)
   
      Returns the path (visually) of a page $uid, fx. "/First page/Second page/Another subpage"
      Each part of the path will be limited to $titleLimit characters
      Deleted pages are filtered out.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L540>`__.
      
      :param int $uid: Page uid for which to create record path
      :param string $clause: Clause is additional where clauses, eg.
      :param int $titleLimit: Title limit
      :param int $fullTitleLimit: Title limit of Full title (typ. set to 1000 or so)
      
   .. php:method:: isTableLocalizable(string $table)
   
      Determines whether a table is localizable and has the languageField and transOrigPointerField set in $GLOBALS['TCA'].
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L572>`__.
      
      :param string $table: The table to check
      
   .. php:method:: readPageAccess(int $id, string $perms_clause)
   
      Returns a page record (of page with $id) with an extra field "_thePath" set to the record path if
      the WHERE clause $perms_clause selects the record. This works as an access check that returns a page
      record if access was granted, otherwise false.
      
      If $id is zero a pseudo root-page with "_thePath" set is returned IF the current BE_USER is admin.
      In any case ->isInWebMount must return TRUE for the user (regardless of $perms_clause)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L593>`__.
      
      :param int $id: Page uid for which to check read-access
      :param string $perms_clause: This is typically a value generated with static::getBackendUserAuthentication()->getPagePermsClause(1);
      
   .. php:method:: getTCAtypeValue(string $table, array $row)
   
      Returns the "type" value of $rec from $table which can be used to look up the correct "types" rendering section in $GLOBALS['TCA']
      If no "type" field is configured in the "ctrl"-section of the $GLOBALS['TCA'] for the table, zero is used.
      
      If zero is not an index in the "types" section of $GLOBALS['TCA'] for the table, then the $fieldValue returned will default to 1 (no matter if that is an index or not)
      
      Note: This method is very similar to the type determination of FormDataProvider/DatabaseRecordTypeValue,
      however, it has two differences:
      1) The method in TCEForms also takes care of localization (which is difficult to do here as the whole infrastructure for language overlays is only in TCEforms).
      2) The $row array looks different in TCEForms, as in there it's not the raw record but the prepared data from other providers is handled, which changes e.g. how "select"
      and "group" field values are stored, which makes different processing of the "foreign pointer field" type field variant necessary.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L631>`__.
      
      :param string $table: Table name present in TCA
      :param array $row: Record from $table
      
   .. php:method:: getPagesTSconfig(int $id)
   
      Returns the Page TSconfig for page with id, $id
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L697>`__.
      
      :param int $id: Page uid for which to create Page TSconfig
      
   .. php:method:: daysUntil(int $tstamp)
   
      Returns the difference in days between input $tstamp and $EXEC_TIME
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L811>`__.
      
      :param int $tstamp: Time stamp, seconds
      
   .. php:method:: date(int $tstamp)
   
      Returns $tstamp formatted as "ddmmyy" (According to $GLOBALS['TYPO3_CONF_VARS']['SYS']['ddmmyy'])
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L823>`__.
      
      :param int $tstamp: Time stamp, seconds
      
   .. php:method:: datetime(int $value)
   
      Returns $tstamp formatted as "ddmmyy hhmm" (According to $GLOBALS['TYPO3_CONF_VARS']['SYS']['ddmmyy'] AND $GLOBALS['TYPO3_CONF_VARS']['SYS']['hhmm'])
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L834>`__.
      
      :param int $value: Time stamp, seconds
      
   .. php:method:: time(int $value, bool $withSeconds)
   
      Returns $value (in seconds) formatted as hh:mm:ss
      For instance $value = 3600 + 60*2 + 3 should return "01:02:03"
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L850>`__.
      
      :param int $value: Time stamp, seconds
      :param bool $withSeconds: Output hh:mm:ss. If FALSE: hh:mm
      
   .. php:method:: calcAge(int $seconds, string $labels)
   
      Returns the "age" in minutes / hours / days / years of the number of $seconds inputted.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L862>`__.
      
      :param int $seconds: Seconds could be the difference of a certain timestamp and time()
      :param string $labels: Labels should be something like ' min| hrs| days| yrs| min| hour| day| year'. This value is typically delivered by this function call: $GLOBALS["LANG"]->sL("LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.minutesHoursDaysYears")
      
   .. php:method:: dateTimeAge(int $tstamp, int $prefix, string $date)
   
      Returns a formatted timestamp if $tstamp is set.
      
      The date/datetime will be followed by the age in parenthesis.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L892>`__.
      
      :param int $tstamp: Time stamp, seconds
      :param int $prefix: 1/-1 depending on polarity of age.
      :param string $date: $date=="date" will yield "dd:mm:yy" formatting, otherwise "dd:mm:yy hh:mm
      
   .. php:method:: resolveFileReferences(string $tableName, string $fieldName, array $element, int|null $workspaceId)
   
      Resolves file references for a given record.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L911>`__.
      
      :param string $tableName: Name of the table of the record
      :param string $fieldName: Name of the field of the record
      :param array $element: Record data
      :param int|null $workspaceId: Workspace to fetch data for
      
   .. php:method:: thumbCode(array $row, string $table, string $field, string $backPath, string $thumbScript, string $uploaddir, int $abs, string $tparams, int|string $size, bool $linkInfoPopup)
   
      Returns a linked image-tag for thumbnail(s)/fileicons/truetype-font-previews from a database row with sys_file_references
      All $GLOBALS['TYPO3_CONF_VARS']['GFX']['imagefile_ext'] extension are made to thumbnails + ttf file (renders font-example)
      Thumbnails are linked to ShowItemController (/thumbnails route)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L986>`__.
      
      :param array $row: Row is the database row from the table, $table.
      :param string $table: Table name for $row (present in TCA)
      :param string $field: Field is pointing to the connecting field of sys_file_references
      :param string $backPath: Back path prefix for image tag src="" field
      :param string $thumbScript: UNUSED since FAL
      :param string $uploaddir: UNUSED since FAL
      :param int $abs: UNUSED
      :param string $tparams: Optional: $tparams is additional attributes for the image tags
      :param int|string $size: Optional: $size is [w]x[h] of the thumbnail. 64 is default.
      :param bool $linkInfoPopup: Whether to wrap with a link opening the info popup
      
   .. php:method:: getThumbnailUrl()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1093>`__.
      
      :returntype: string
      
   .. php:method:: titleAttribForPages(array $row, string $perms_clause, bool $includeAttrib)
   
      Returns title-attribute information for a page-record informing about id, doktype, hidden, starttime, endtime, fe_group etc.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1112>`__.
      
      :param array $row: Input must be a page row ($row) with the proper fields set (be sure - send the full range of fields for the table)
      :param string $perms_clause: This is used to get the record path of the shortcut page, if any (and doktype==4)
      :param bool $includeAttrib: If $includeAttrib is set, then the 'title=""' attribute is wrapped about the return value, which is in any case htmlspecialchar()'ed already
      
   .. php:method:: getRecordToolTip()
   
      Returns the combined markup for Bootstraps tooltips
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1201>`__.
      
      
   .. php:method:: getRecordIconAltText(array $row, string $table)
   
      Returns title-attribute information for ANY record (from a table defined in TCA of course)
      The included information depends on features of the table, but if hidden, starttime, endtime and fe_group fields are configured for, information about the record status in regard to these features are is included.
      
      "pages" table can be used as well and will return the result of ->titleAttribForPages() for that page.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1219>`__.
      
      :param array $row: Table row; $row is a row from the table, $table
      :param string $table: Table name
      
   .. php:method:: getLabelFromItemlist(string $table, string $col, string $key)
   
      Returns the label of the first found entry in an "items" array from $GLOBALS['TCA'] (tablename = $table/fieldname = $col) where the value is $key
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1266>`__.
      
      :param string $table: Table name, present in $GLOBALS['TCA']
      :param string $col: Field name, present in $GLOBALS['TCA']
      :param string $key: items-array value to match
      
   .. php:method:: getLabelFromItemListMerged(int $pageId, string $table, string $column, string $key)
   
      Return the label of a field by additionally checking TsConfig values
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1290>`__.
      
      :param int $pageId: Page id
      :param string $table: Table name
      :param string $column: Field Name
      :param string $key: item value
      
   .. php:method:: getLabelsFromItemsList(string $table, string $column, string $keyList, array $columnTsConfig)
   
      Splits the given key with commas and returns the list of all the localized items labels, separated by a comma.
      
      NOTE: this does not take itemsProcFunc into account
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1328>`__.
      
      :param string $table: Table name, present in TCA
      :param string $column: Field name
      :param string $keyList: Key or comma-separated list of keys.
      :param array $columnTsConfig: page TSConfig for $column (TCEMAIN.<table>.<column>)
      
   .. php:method:: getItemLabel(string $table, string $column)
   
      Returns the label-value for fieldname $column in table $table.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1376>`__.
      
      :param string $table: Table name present in $GLOBALS['TCA']
      :param string $column: Field name in $GLOBALS['TCA']['columns']
      :returntype: string
      :returns: Value of $GLOBALS['TCA']['columns']['label'] or null if not set
      
   .. php:method:: getRecordTitle(string $table, array $row, bool $prep, bool $forceResult)
   
      Returns the "title"-value in record, $row, from table, $table
      The field(s) from which the value is taken is determined by the "ctrl"-entries 'label', 'label_alt' and 'label_alt_force'
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1391>`__.
      
      :param string $table: Table name, present in TCA
      :param array $row: Row from table
      :param bool $prep: If set, result is prepared for output: The output is cropped to a limited length (depending on BE_USER->uc['titleLen']) and if no value is found for the title, '<em>[No title]</em>' is returned (localized). Further, the output is htmlspecialchars()'ed
      :param bool $forceResult: If set, the function always returns an output. If no value is found for the title, '[No title]' is returned (localized).
      
   .. php:method:: getRecordTitlePrep(string $title, int $titleLength)
   
      Crops a title string to a limited length and if it really was cropped, wrap it in a <span title="...">|</span>,
      which offers a tooltip with the original title when moving mouse over it.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1466>`__.
      
      :param string $title: The title string to be cropped
      :param int $titleLength: Crop title after this length - if not set, BE_USER->uc['titleLen'] is used
      
   .. php:method:: getNoRecordTitle(bool $prep)
   
      Get a localized [No title] string, wrapped in <em>|</em> if $prep is TRUE.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1487>`__.
      
      :param bool $prep: Wrap result in <em>|</em>
      
   .. php:method:: getProcessedValue(string $table, string $col, mixed $value, int $fixed_lgd_chars, bool $defaultPassthrough, bool $noRecordLookup, int $uid, bool $forceResult, int $pid)
   
      Returns a human readable output of a value from a record
      For instance a database record relation would be looked up to display the title-value of that record. A checkbox with a "1" value would be "Yes", etc.
      
      $table/$col is tablename and fieldname
      REMEMBER to pass the output through htmlspecialchars() if you output it to the browser! (To protect it from XSS attacks and be XHTML compliant)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1516>`__.
      
      :param string $table: Table name, present in TCA
      :param string $col: Field name, present in TCA
      :param mixed $value: The value of that field from a selected record
      :param int $fixed_lgd_chars: The max amount of characters the value may occupy
      :param bool $defaultPassthrough: Flag means that values for columns that has no conversion will just be pass through directly (otherwise cropped to 200 chars or returned as "N/A")
      :param bool $noRecordLookup: If set, no records will be looked up, UIDs are just shown.
      :param int $uid: Uid of the current record
      :param bool $forceResult: If BackendUtility::getRecordTitle is used to process the value, this parameter is forwarded.
      :param int $pid: Optional page uid is used to evaluate page TSConfig for the given field
      
   .. php:method:: getProcessedValueExtra(string $table, string $fN, string $fV, int $fixed_lgd_chars, int $uid, bool $forceResult, int $pid)
   
      Same as ->getProcessedValue() but will go easy on fields like "tstamp" and "pid" which are not configured in TCA - they will be formatted by this function instead.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1809>`__.
      
      :param string $table: Table name, present in TCA
      :param string $fN: Field name
      :param string $fV: Field value
      :param int $fixed_lgd_chars: The max amount of characters the value may occupy
      :param int $uid: Uid of the current record
      :param bool $forceResult: If BackendUtility::getRecordTitle is used to process the value, this parameter is forwarded.
      :param int $pid: Optional page uid is used to evaluate page TSConfig for the given field
      
   .. php:method:: cshItem(string $table, string $field, string $_, string $wrap)
   
      API for getting CSH icons/text for use in backend modules.
      
      TCA_DESCR will be loaded if it isn't already
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1900>`__.
      
      :param string $table: Table name ('_MOD_'+module name)
      :param string $field: Field name (CSH locallang main key)
      :param string $_: (unused)
      :param string $wrap: Wrap code for icon-mode, splitted by "|". Not used for full-text mode.
      
   .. php:method:: getPreviewUrl(int $pageUid, string $backPath, array|null $rootLine, string $anchorSection, string $alternativeUrl, string $additionalGetVars, bool $switchFocus)
   
      Returns the preview url
      
      It will detect the correct domain name if needed and provide the link with the right back path.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L1924>`__.
      
      :param int $pageUid: Page UID
      :param string $backPath: Must point back to TYPO3_mainDir (where the site is assumed to be one level above)
      :param array|null $rootLine: If root line is supplied the function will look for the first found domain record and use that URL instead (if found)
      :param string $anchorSection: Optional anchor to the URL
      :param string $alternativeUrl: An alternative URL that, if set, will ignore other parameters except $switchFocus: It will return the window.open command wrapped around this URL!
      :param string $additionalGetVars: Additional GET variables.
      :param bool $switchFocus: If TRUE, then the preview window will gain the focus.
      :returntype: string
      
   .. php:method:: wrapClickMenuOnIcon(string $content, string $table, int|string $uid, string $context)
   
      Makes click menu link (context sensitive menu)
      
      Returns $str wrapped in a link which will activate the context sensitive
      menu for the record ($table/$uid) or file ($table = file)
      The link will load the top frame with the parameter "&item" which is the table, uid
      and context arguments imploded by "|": rawurlencode($table.'|'.$uid.'|'.$context)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2035>`__.
      
      :param string $content: String to be wrapped in link, typ. image tag.
      :param string $table: Table name/File path. If the icon is for a database
      record, enter the tablename from $GLOBALS['TCA']. If a file then enter
      the absolute filepath
      :param int|string $uid: If icon is for database record this is the UID for the
      record from $table or identifier for sys_file record
      :param string $context: Set tree if menu is called from tree view
      :returntype: string
      :returns: The link wrapped input string.
      
   .. php:method:: getClickMenuOnIconTagParameters(string $table, int|string $uid, string $context)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2050>`__.
      
      :param string $table: Table name/File path. If the icon is for a database
      record, enter the tablename from $GLOBALS['TCA']. If a file then enter
      the absolute filepath
      :param int|string $uid: If icon is for database record this is the UID for the
      record from $table or identifier for sys_file record
      :param string $context: Set tree if menu is called from tree view
      :returntype: array
      
   .. php:method:: getLinkToDataHandlerAction(string $parameters, string $redirectUrl)
   
      Returns a URL with a command to TYPO3 Datahandler
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2067>`__.
      
      :param string $parameters: Set of GET params to send. Example: "&cmd[tt_content][123][move]=456" or "&data[tt_content][123][hidden]=1&data[tt_content][123][title]=Hello%20World
      :param string $redirectUrl: Redirect URL, default is to use $GLOBALS['TYPO3_REQUEST']->getAttribute('normalizedParams')->getRequestUri()
      
   .. php:method:: getFuncMenu(mixed $mainParams, string $elementName, string $currentValue, array $menuItems, string $script, string $addParams)
   
      Returns a selector box "function menu" for a module
      See Inside TYPO3 for details about how to use / make Function menus
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2087>`__.
      
      :param mixed $mainParams: The "&id=" parameter value to be sent to the module, but it can be also a parameter array which will be passed instead of the &id=...
      :param string $elementName: The form elements name, probably something like "SET[...]
      :param string $currentValue: The value to be selected currently.
      :param array $menuItems: An array with the menu items for the selector box
      :param string $script: The script to send the &id to, if empty it's automatically found
      :param string $addParams: Additional parameters to pass to the script.
      :returntype: string
      :returns: HTML code for selector box
      
   .. php:method:: getDropdownMenu(mixed $mainParams, string $elementName, string|int $currentValue, array $menuItems, string $script, string $addParams, array $additionalAttributes)
   
      Returns a selector box to switch the view
      Based on BackendUtility::getFuncMenu() but done as new function because it has another purpose.
      
      Mingling with getFuncMenu would harm the docHeader Menu.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2139>`__.
      
      :param mixed $mainParams: The "&id=" parameter value to be sent to the module, but it can be also a parameter array which will be passed instead of the &id=...
      :param string $elementName: The form elements name, probably something like "SET[...]
      :param string|int $currentValue: The value to be selected currently.
      :param array $menuItems: An array with the menu items for the selector box
      :param string $script: The script to send the &id to, if empty it's automatically found
      :param string $addParams: Additional parameters to pass to the script.
      :param array $additionalAttributes: Additional attributes for the select element
      
   .. php:method:: getFuncCheck(mixed $mainParams, string $elementName, string|bool $currentValue, string $script, string $addParams, string $tagParams)
   
      Checkbox function menu.
      
      Works like ->getFuncMenu() but takes no $menuItem array since this is a simple checkbox.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2192>`__.
      
      :param mixed $mainParams: $id is the "&id=" parameter value to be sent to the module, but it can be also a parameter array which will be passed instead of the &id=...
      :param string $elementName: The form elements name, probably something like "SET[...]
      :param string|bool $currentValue: The value to be selected currently.
      :param string $script: The script to send the &id to, if empty it's automatically found
      :param string $addParams: Additional parameters to pass to the script.
      :param string $tagParams: Additional attributes for the checkbox input tag
      
   .. php:method:: setUpdateSignal(string $set, mixed $params)
   
      Call to update the page tree frame (or something else..?) after
      use 'updatePageTree' as a first parameter will set the page tree to be updated.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2258>`__.
      
      :param string $set: Key to set the update signal. When setting, this value contains strings telling WHAT to set. At this point it seems that the value "updatePageTree" is the only one it makes sense to set. If empty, all update signals will be removed.
      :param mixed $params: Additional information for the update signal, used to only refresh a branch of the tree
      
   .. php:method:: getUpdateSignalCode()
   
      Call to update the page tree frame (or something else..?) if this is set by the function
      setUpdateSignal(). It will return some JavaScript that does the update
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2285>`__.
      
      
   .. php:method:: getUpdateSignalDetails()
   
      Gets instructions for update signals (e.g. page tree shall be refreshed,
      since some page title has been modified during the current HTTP request).
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2351>`__.
      
      :returntype: array
      :returns: list<string>, script: list<string>}
      
   .. php:method:: getModuleData(array $MOD_MENU, array $CHANGED_SETTINGS, string $modName, string $type, string $dontValidateList, string $setDefaultList)
   
      Returns an array which is most backend modules becomes MOD_SETTINGS containing values from function menus etc. determining the function of the module.
      
      This is kind of session variable management framework for the backend users.
      If a key from MOD_MENU is set in the CHANGED_SETTINGS array (eg. a value is passed to the script from the outside), this value is put into the settings-array
      Ultimately, see Inside TYPO3 for how to use this function in relation to your modules.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2434>`__.
      
      :param array $MOD_MENU: MOD_MENU is an array that defines the options in menus.
      :param array $CHANGED_SETTINGS: CHANGED_SETTINGS represents the array used when passing values to the script from the menus.
      :param string $modName: modName is the name of this module. Used to get the correct module data.
      :param string $type: If type is 'ses' then the data is stored as session-lasting data. This means that it'll be wiped out the next time the user logs in.
      :param string $dontValidateList: dontValidateList can be used to list variables that should not be checked if their value is found in the MOD_MENU array. Used for dynamically generated menus.
      :param string $setDefaultList: List of default values from $MOD_MENU to set in the output array (only if the values from MOD_MENU are not arrays)
      
   .. php:method:: getTCEFORM_TSconfig(string $table, array $row)
   
      Returns TSConfig for the TCEFORM object in Page TSconfig.
      
      Used in TCEFORMs
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2647>`__.
      
      :param string $table: Table name present in TCA
      :param array $row: Row from table
      
   .. php:method:: getTSCpidCached(string $table, string $uid, string $pid)
   
      Return the real pid of a record and caches the result.
      
      The non-cached method needs database queries to do the job, so this method
      can be used if code sometimes calls the same record multiple times to save
      some queries. This should not be done if the calling code may change the
      same record meanwhile.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2732>`__.
      
      :param string $table: Tablename
      :param string $uid: UID value
      :param string $pid: PID value
      
   .. php:method:: isModuleSetInTBE_MODULES(string $modName)
   
      Returns TRUE if $modName is set and is found as a main- or submodule in $TBE_MODULES array
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2782>`__.
      
      :param string $modName: Module name
      
   .. php:method:: referenceCount(string $table, string $ref, string $msg, string|int|null $count)
   
      Counting references to a record/file
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2801>`__.
      
      :param string $table: Table name (or "_FILE" if its a file)
      :param string $ref: Reference: If table, then int-uid, if _FILE, then file reference (relative to Environment::getPublicPath())
      :param string $msg: Message with %s, eg. "There were %s records pointing to this file!
      :param string|int|null $count: Reference count
      
   .. php:method:: translationCount(string $table, string $ref, string $msg)
   
      Counting translations of records
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2850>`__.
      
      :param string $table: Table name
      :param string $ref: Reference: the record's uid
      :param string $msg: Message with %s, eg. "This record has %s translation(s) which will be deleted, too!
      
   .. php:method:: workspaceOL(string $table, array|null $row, int $wsid, bool $unsetMovePointers)
   
      Workspace Preview Overlay.
      
      Generally ALWAYS used when records are selected based on uid or pid.
      Principle; Record online! => Find offline?
      The function MAY set $row to FALSE. This happens if a moved record is given and
      $unsetMovePointers is set to true. In other words, you should check if the input record
      is still an array afterwards when using this function.
      
      If the versioned record is a moved record the "pid" value will then contain the newly moved location
      and "ORIG_pid" will contain the live pid.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L2989>`__.
      
      :param string $table: Table name
      :param array|null $row: Record by reference. At least "uid", "pid", "t3ver_oid" and "t3ver_state" must be set. Keys not prefixed with '_' are used as field names in SQL.
      :param int $wsid: Workspace ID, if not specified will use static::getBackendUserAuthentication()->workspace
      :param bool $unsetMovePointers: If TRUE the function does not return a "pointer" row for moved records in a workspace
      
   .. php:method:: getWorkspaceVersionOfRecord(int $workspace, string $table, int $uid, string $fields)
   
      Select the workspace version of a record, if exists
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3063>`__.
      
      :param int $workspace: Workspace ID
      :param string $table: Table name to select from
      :param int $uid: Record uid for which to find workspace version.
      :param string $fields: Field list to select
      
   .. php:method:: getLiveVersionOfRecord(string $table, int|string $uid, string $fields)
   
      Returns live version of record
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3119>`__.
      
      :param string $table: Table name
      :param int|string $uid: Record UID of draft, offline version
      :param string $fields: Field list, default is *
      
   .. php:method:: isTableWorkspaceEnabled(string $table)
   
      Determines whether a table is enabled for workspaces.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3268>`__.
      
      :param string $table: Name of the table to be checked
      
   .. php:method:: getTcaFieldConfiguration(string $table, string $field)
   
      Gets the TCA configuration of a field.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3280>`__.
      
      :param string $table: Name of the table
      :param string $field: Name of the field
      
   .. php:method:: isWebMountRestrictionIgnored(string $table)
   
      Whether to ignore restrictions on a web-mount of a table.
      
      The regular behaviour is that records to be accessed need to be
      in a valid user's web-mount.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3297>`__.
      
      :param string $table: Name of the table
      
   .. php:method:: isRootLevelRestrictionIgnored(string $table)
   
      Whether to ignore restrictions on root-level records.
      
      The regular behaviour is that records on the root-level (page-id 0)
      only can be accessed by admin users.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/backend/Classes/Utility/BackendUtility.php#L3310>`__.
      
      :param string $table: Name of the table
