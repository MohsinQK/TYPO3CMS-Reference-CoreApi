.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Domain\Repository

.. php:class:: PageRepository

   Page functions, a lot of sql/pages-related functions
   
   Mainly used in the frontend but also in some cases in the backend. It's
   important to set the right $where_hid_del in the object so that the
   functions operate properly
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php>`__.

   .. php:const:: DOKTYPE_DEFAULT
   
      :php:`1`, type integer
      
      .. php:const:: DOKTYPE_LINK
   
      :php:`3`, type integer
      
      .. php:const:: DOKTYPE_SHORTCUT
   
      :php:`4`, type integer
      
      .. php:const:: DOKTYPE_BE_USER_SECTION
   
      :php:`6`, type integer
      
      .. php:const:: DOKTYPE_MOUNTPOINT
   
      :php:`7`, type integer
      
      .. php:const:: DOKTYPE_SPACER
   
      :php:`199`, type integer
      
      .. php:const:: DOKTYPE_SYSFOLDER
   
      :php:`254`, type integer
      
      .. php:const:: DOKTYPE_RECYCLER
   
      :php:`255`, type integer
      
      .. php:const:: SHORTCUT_MODE_NONE
   
      :php:`0`, type integer
      
      .. php:const:: SHORTCUT_MODE_FIRST_SUBPAGE
   
      :php:`1`, type integer
      
      .. php:const:: SHORTCUT_MODE_RANDOM_SUBPAGE
   
      :php:`2`, type integer
      
      .. php:const:: SHORTCUT_MODE_PARENT_PAGE
   
      :php:`3`, type integer
      
      
   .. php:attr:: where_hid_del
   
      This is not the final clauses. There will normally be conditions for the
      hidden, starttime and endtime fields as well. You MUST initialize the object
      by the init() function
      
      
   .. php:attr:: where_groupAccess
   
      Clause for fe_group access
      
      
   .. php:method:: getPage(int $uid, bool $disableGroupAccessCheck)
   
      Loads the full page record for the given page ID.
      
      The page record is either served from a first-level cache or loaded from the
      database. If no page can be found, an empty array is returned.
      
      Language overlay and versioning overlay are applied. Mount Point
      handling is not done, an overlaid Mount Point is not replaced.
      
      The result is conditioned by the public properties where_groupAccess
      and where_hid_del that are preset by the init() method.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L258>`__.
      
      :param int $uid: The page id to look up
      :param bool $disableGroupAccessCheck: set to true to disable group access check
      
   .. php:method:: getPage_noCheck(int $uid)
   
      Return the $row for the page with uid = $uid WITHOUT checking for
      ->where_hid_del (start- and endtime or hidden). Only "deleted" is checked!
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L326>`__.
      
      :param int $uid: The page id to look up
      
   .. php:method:: getLanguageOverlay(string $table, array $row)
   
      Master helper method to overlay a record to a language.
      
      Be aware that for pages the languageId is taken, and for all other records the contentId.
      This might change through a feature switch in the future.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L366>`__.
      
      :param string $table: the name of the table, should be a TCA table with localization enabled
      :param array $row: the current (full-fletched) record.
      
   .. php:method:: getPageOverlay(mixed $pageInput, int $languageUid)
   
      Returns the relevant page overlay record fields
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L400>`__.
      
      :param mixed $pageInput: If $pageInput is an integer, it's the pid of the pageOverlay record and thus the page overlay record is returned. If $pageInput is an array, it's a page-record and based on this page record the language record is found and OVERLAID before the page record is returned.
      :param int $languageUid: anguage UID if you want to set an alternative value to $this->sys_language_uid which is default. Should be >=0
      
   .. php:method:: getPagesOverlay(array $pagesInput, int $languageUid)
   
      Returns the relevant page overlay record fields
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L418>`__.
      
      :param array $pagesInput: Array of integers or array of arrays. If each value is an integer, it's the pids of the pageOverlay records and thus the page overlay records are returned. If each value is an array, it's page-records and based on this page records the language records are found and OVERLAID before the page records are returned.
      :param int $languageUid: Language UID if you want to set an alternative value to $this->sys_language_uid which is default. Should be >=0
      
   .. php:method:: getRecordOverlay(string $table, array $row, int $sys_language_content, string $OLmode)
   
      Creates language-overlay for records in general (where translation is found
      in records from the same table)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L605>`__.
      
      :param string $table: Table name
      :param array $row: Record to overlay. Must contain uid, pid and $table]['ctrl']['languageField']
      :param int $sys_language_content: Pointer to the site language id for content on the site.
      :param string $OLmode: Overlay mode. If "hideNonTranslated" then records without translation will not be returned  un-translated but unset (and return value is NULL)
      
   .. php:method:: getMenu(int|int[] $pageId, string $fields, string $sortField, string $additionalWhereClause, bool $checkShortcuts)
   
      Returns an array with page rows for subpages of a certain page ID. This is used for menus in the frontend.
      
      If there are mount points in overlay mode the _MP_PARAM field is set to the correct MPvar.
      
      If the $pageId being input does in itself require MPvars to define a correct
      rootline these must be handled externally to this function.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L749>`__.
      
      :param int|int[] $pageId: The page id (or array of page ids) for which to fetch subpages (PID)
      :param string $fields: Fields to select, `*` is the default - If a custom list is set, make sure the list
      contains the `uid` field. It's mandatory for further processing of the result row.
      :param string $sortField: The field to sort by. Default is "sorting
      :param string $additionalWhereClause: Optional additional where clauses. Like "AND title like '%some text%'" for instance.
      :param bool $checkShortcuts: Check if shortcuts exist, checks by default
      
   .. php:method:: getMenuForPages(int[] $pageIds, string $fields, string $sortField, string $additionalWhereClause, bool $checkShortcuts)
   
      Returns an array with page-rows for pages with uid in $pageIds.
      
      This is used for menus. If there are mount points in overlay mode
      the _MP_PARAM field is set to the correct MPvar.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L773>`__.
      
      :param int[] $pageIds: Array of page ids to fetch
      :param string $fields: Fields to select, `*` is the default - If a custom list is set, make sure the list
      contains the `uid` field. It's mandatory for further processing of the result row.
      :param string $sortField: The field to sort by. Default is "sorting"
      :param string $additionalWhereClause: Optional additional where clauses. Like "AND title like '%some text%'" for instance.
      :param bool $checkShortcuts: Check if shortcuts exist, checks by default
      
   .. php:method:: resolveShortcutPage(array page, bool resolveRandomSubpages = false, bool disableGroupAccessCheck = false)
   
      Check if page is a shortcut, then resolve the target page directly.
      
      This is a better method than "getPageShortcut()" and should be used instead, as this automatically checks for $page records
      and returns the shortcut pages directly.
      
      This method also provides a runtime cache around resolving the shortcut resolving, in order to speed up link generation
      to the same shortcut page.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1085>`__.
      
      :param array $page: the page
      :param bool $resolveRandomSubpages: the resolveRandomSubpages, default: false
      :param bool $disableGroupAccessCheck: the disableGroupAccessCheck, default: false
      :returntype: array
      
   .. php:method:: getExtURL(array $pagerow)
   
      Returns the redirect URL for the input page row IF the doktype is set to 3.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1127>`__.
      
      :param array $pagerow: The page row to return URL type for
      
   .. php:method:: getMountPointInfo(int $pageId, array|bool $pageRec, array $prevMountPids, int $firstPageUid)
   
      Returns a MountPoint array for the specified page
      
      Does a recursive search if the mounted page should be a mount page
      itself.
      
      Note:
      
      Recursive mount points are not supported by all parts of the core.
      The usage is discouraged. They may be removed from this method.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1178>`__.
      
      :param int $pageId: Page id to do the lookup for.
      :param array|bool $pageRec: Optional page record for the given page.
      :param array $prevMountPids: Internal register to prevent lookup cycles.
      :param int $firstPageUid: The first page id.
      
   .. php:method:: filterAccessiblePageIds(int[] $pageIds)
   
      Removes Page UID numbers from the input array which are not available due to QueryRestrictions
      This is also very helpful to add a custom RestrictionContainer to add custom Restrictions such as "bad doktypes" e.g. RECYCLER doktypes
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1274>`__.
      
      :param int[] $pageIds: Array of Page UID numbers to check
      :returntype: array
      :returns: Returns the array of remaining page UID numbers
      
   .. php:method:: checkRecord(string $table, int $uid, bool|int $checkPage)
   
      Checks if a record exists and is accessible.
      
      The row is returned if everything's OK.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1315>`__.
      
      :param string $table: The table name to search
      :param int $uid: The uid to look up in $table
      :param bool|int $checkPage: If checkPage is set, it's also required that the page on which the record resides is accessible
      
   .. php:method:: getRawRecord(string $table, int $uid, string $fields)
   
      Returns record no matter what - except if record is deleted
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1366>`__.
      
      :param string $table: The table name to search
      :param int $uid: The uid to look up in $table
      :param string $fields: Fields to select, `*` is the default - If a custom list is set, make sure the list
      contains the `uid` field. It's mandatory for further processing of the result row.
      
   .. php:method:: enableFields(string $table, int $show_hidden, array $ignore_array)
   
      Returns a part of a WHERE clause which will filter out records with start/end
      times or hidden/fe_groups fields set to values that should de-select them
      according to the current time, preview settings or user login. Definitely a
      frontend function.
      
      Is using the $GLOBALS['TCA'] arrays "ctrl" part where the key "enablefields"
      determines for each table which of these features applies to that table.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1411>`__.
      
      :param string $table: Table name found in the $GLOBALS['TCA'] array
      :param int $show_hidden: If $show_hidden is set (0/1), any hidden-fields in records are ignored. NOTICE: If you call this function, consider what to do with the show_hidden parameter. Maybe it should be set? See ContentObjectRenderer->enableFields where it's implemented correctly.
      :param array $ignore_array: Array you can pass where keys can be "disabled", "starttime", "endtime", "fe_group" (keys from "enablefields" in TCA) and if set they will make sure that part of the clause is not added. Thus disables the specific part of the clause. For previewing etc.
      
   .. php:method:: getMultipleGroupsWhereClause(string $field, string $table)
   
      Creating where-clause for checking group access to elements in enableFields
      function
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1524>`__.
      
      :param string $field: Field with group list
      :param string $table: Table name
      
   .. php:method:: versionOL(string $table, array $row, bool $unsetMovePointers, bool $bypassEnableFieldsCheck)
   
      Versioning Preview Overlay
      
      ONLY active when backend user is previewing records. MUST NEVER affect a site
      served which is not previewed by backend users!!!
      
      Generally ALWAYS used when records are selected based on uid or pid. If
      records are selected on other fields than uid or pid (eg. "email = ....") then
      usage might produce undesired results and that should be evaluated on
      individual basis.
      
      Principle: Record online! => Find offline?
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1583>`__.
      
      :param string $table: Table name
      :param array $row: Record array passed by reference. As minimum, the "uid", "pid" and "t3ver_state" fields must exist! The record MAY be set to FALSE in which case the calling function should act as if the record is forbidden to access!
      :param bool $unsetMovePointers: If set, the $row is cleared in case it is a move-pointer. This is only for preview of moved records (to remove the record from the original location so it appears only in the new location)
      :param bool $bypassEnableFieldsCheck: Unless this option is TRUE, the $row is unset if enablefields for BOTH the version AND the online record deselects it. This is because when versionOL() is called it is assumed that the online record is already selected with no regards to it's enablefields. However, after looking for a new version the online record enablefields must ALSO be evaluated of course. This is done all by this function!
      
   .. php:method:: getPageIdsRecursive()
   
      Perfect use case: get storage folders recursively, including the given Page IDs.
      
      Difference to "getDescendantPageIdsRecursive" is that this is used with multiple Page IDs,
      AND it includes the page IDs themselves.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1771>`__.
      
      :returntype: array
      
   .. php:method:: getDescendantPageIdsRecursive(int $startPageId, int $depth, int $begin, array $excludePageIds, bool $bypassEnableFieldsCheck)
   
      Generates a list of Page IDs from $startPageId. List does not include $startPageId itself.
      
      Only works on default language level.
      
      The only pages WHICH PREVENTS DESCENDING in a branch are
      - deleted pages,
      - pages in a recycler (doktype = 255) or of the Backend User Section (doktype = 6) type
      - pages that have the extendToSubpages set, WHERE starttime, endtime, hidden or fe_group
        would hide the pages.
      
      Apart from that, pages with enable-fields excluding them, will also be
      removed.
      
      Mount Pages are also descended but notice that these ID numbers are not
      useful for links unless the correct MPvar is set.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L1810>`__.
      
      :param int $startPageId: The id of the start page from which point in the page tree to descend.
      :param int $depth: The number of levels to descend. If you want to descend infinitely, just set this to 100 or so. Should be at least "1" since zero will just make the function return (no descend...)
      :param int $begin: Is an optional integer that determines at which level in the tree to start collecting uid's. Zero means 'start right away', 1 = 'next level and out'
      :param array $excludePageIds: avoid collecting these pages and their possible subpages
      :param bool $bypassEnableFieldsCheck: if true, then enableFields and other checks are not evaluated
      :returntype: array
      :returns: Returns the list of Page IDs
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Domain/Repository/PageRepository.php#L21>`__.
