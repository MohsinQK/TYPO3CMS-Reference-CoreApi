.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Authentication

.. php:class:: abstract AbstractUserAuthentication

   Authentication of users in TYPO3
   
   This class is used to authenticate a login user.
   The class is used by both the frontend and backend.
   In both cases this class is a parent class to BackendUserAuthentication and FrontendUserAuthentication
   
   See Inside TYPO3 for more information about the API of the class and internal variables.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php>`__.

   .. php:attr:: name
   
      Session/Cookie name
      
      
   .. php:attr:: user_table
   
      Table in database with user data
      
      
   .. php:attr:: usergroup_table
   
      Table in database with user groups
      
      
   .. php:attr:: username_column
   
      Column for login-name
      
      
   .. php:attr:: userident_column
   
      Column for password
      
      
   .. php:attr:: userid_column
   
      Column for user-id
      
      
   .. php:attr:: usergroup_column
   
      Column for user group information
      
      
   .. php:attr:: lastLogin_column
   
      Column name for last login timestamp
      
      
   .. php:attr:: enablecolumns
   
      Enable field columns of user table
      
      
   .. php:attr:: formfield_uname
   
      Form field with login-name
      
      
   .. php:attr:: formfield_uident
   
      Form field with password
      
      
   .. php:attr:: formfield_status
   
      Form field with status: *'login', 'logout'. If empty login is not verified.
      
      
   .. php:attr:: writeStdLog
   
      Decides if the writelog() function is called at login and logout
      
      
   .. php:attr:: writeAttemptLog
   
      Log failed login attempts
      
      
   .. php:attr:: checkPid
   
      If set, the user-record must be stored at the page defined by $checkPid_value
      
      
   .. php:attr:: checkPid_value
   
      The page id the user record must be stored at, can also hold a comma separated list of pids
      
      
   .. php:attr:: loginSessionStarted
   
      Will be set to TRUE if the login session is actually written during auth-check.
      
      
   .. php:attr:: user
   
      
   .. php:attr:: userGroups
   
      This array will hold the groups that the user is a member of
      
      
   .. php:attr:: dontSetCookie
   
      Will prevent the setting of the session cookie
      
      
   .. php:attr:: loginType
   
      Login type, used for services.
      
      
   .. php:attr:: uc
   
      User Settings (= preferences)
      
      
   .. php:method:: start()
   
      Starts a user session
      Typical configurations will:
      a) check if session cookie was set and if not, set one,
      b) check if a password/username was sent and if so, try to authenticate the user
      c) Lookup a session attached to a user and check timeout etc.
      
      d) Garbage collection, setting of no-cache headers.
      If a user is authenticated the database record of the user (array) will be set in the ->user internal variable.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L254>`__.
      
      
   .. php:method:: appendCookieToResponse()
   
      Used to apply a cookie to a PSR-7 Response.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L295>`__.
      
      :returntype: Psr\\Http\\Message\\ResponseInterface
      
   .. php:method:: createUserSession(array $tempuser)
   
      Creates a user session record and returns its values.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L755>`__.
      
      :param array $tempuser: User data array
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      :returns: The session data for the newly created session.
      
   .. php:method:: logoff()
   
      Log out current user!
      Removes the current session record, sets the internal ->user array to a blank string;
      Thereby the current user (if any) is effectively logged out!
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L836>`__.
      
      
   .. php:method:: removeCookie(string|null $cookieName)
   
      Empty / unset the cookie
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L877>`__.
      
      :param string|null $cookieName: usually, this is $this->name
      
   .. php:method:: isCookieSet()
   
      Returns whether this request is going to set a cookie
      or a cookie was already found in the system
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L898>`__.
      
      
   .. php:method:: writeUC()
   
      This writes $this->>uc to the user-record. This is a way of providing session-data.
      
      You can fetch the data again through $this->uc in this class!
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L952>`__.
      
      
   .. php:method:: unpack_uc()
   
      Unserializes the user configuration from the user record into $this->>uc
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L971>`__.
      
      
   .. php:method:: pushModuleData(string $module, mixed $data, bool $dontPersistImmediately)
   
      Stores data for a module.
      
      The data is stored with the session ID, so you can even check upon retrieval
      if the module data is from a previous session or from the current session.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L990>`__.
      
      :param string $module: Is the identifier of the module, e.g. "web_info"
      :param mixed $data: Is the data you want to store for that module (array, string, ...)
      :param bool $dontPersistImmediately: If set, then the ->uc array (which carries all kinds of user data) is NOT written immediately, but must be written by some subsequent call.
      
   .. php:method:: getModuleData(string $module, string $type)
   
      Gets module data for a module (from a loaded ->uc array)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1010>`__.
      
      :param string $module: Is the identifier of the module, e.g. "web_info"
      :param string $type: If $type = 'ses' then module data is returned only if it was stored in the current session, otherwise data from a previous session will be returned (if available).
      :returntype: mixed
      :returns: The module data if available: $this->uc['moduleData'][$module];
      
   .. php:method:: getSessionData(string $key)
   
      Returns the session data stored for $key.
      
      The data will last only for this login session since it is stored in the user session.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1031>`__.
      
      :param string $key: The key associated with the session data
      
   .. php:method:: setSessionData(string $key, mixed $data)
   
      Set session data by key.
      
      The data will last only for this login session since it is stored in the user session.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1043>`__.
      
      :param string $key: A non empty string to store the data under
      :param mixed $data: Data store store in session
      
   .. php:method:: setAndSaveSessionData(string $key, mixed $data)
   
      Sets the session data ($data) for $key and writes all session data (from ->user['ses_data']) to the database.
      
      The data will last only for this login session since it is stored in the session table.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1055>`__.
      
      :param string $key: Pointer to an associative key in the session data array which is stored serialized in the field "ses_data" of the session table.
      :param mixed $data: The data to store in index $key
      
   .. php:method:: isActiveLogin(Psr\\Http\\Message\\ServerRequestInterface request)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1087>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      :returntype: bool
      
   .. php:method:: writelog(int $type, int $action, int $error, int $details_nr, string $details, array $data, string $tablename, int|string $recuid, int|string $recpid)
   
      DUMMY: Writes to log database table (in some extension classes)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1204>`__.
      
      :param int $type: denotes which module that has submitted the entry. This is the current list:  1=tce_db; 2=tce_file; 3=system (eg. sys_history save); 4=modules; 254=Personal settings changed; 255=login / out action: 1=login, 2=logout, 3=failed login (+ errorcode 3), 4=failure_warning_email sent
      :param int $action: denotes which specific operation that wrote the entry (eg. 'delete', 'upload', 'update' and so on...). Specific for each $type. Also used to trigger update of the interface. (see the log-module for the meaning of each number !!)
      :param int $error: flag. 0 = message, 1 = error (user problem), 2 = System Error (which should not happen), 3 = security notice (admin)
      :param int $details_nr: The message number. Specific for each $type and $action. in the future this will make it possible to translate error messages to other languages
      :param string $details: Default text that follows the message
      :param array $data: Data that follows the log. Might be used to carry special information. If an array the first 5 entries (0-4) will be sprintf'ed the details-text...
      :param string $tablename: Special field used by tce_main.php. These ($tablename, $recuid, $recpid) holds the reference to the record which the log-entry is about. (Was used in attic status.php to update the interface.)
      :param int|string $recuid: Special field used by tce_main.php. These ($tablename, $recuid, $recpid) holds the reference to the record which the log-entry is about. (Was used in attic status.php to update the interface.)
      :param int|string $recpid: Special field used by tce_main.php. These ($tablename, $recuid, $recpid) holds the reference to the record which the log-entry is about. (Was used in attic status.php to update the interface.)
      
   .. php:method:: getSession()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L1273>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Authentication/AbstractUserAuthentication.php#L21>`__.
