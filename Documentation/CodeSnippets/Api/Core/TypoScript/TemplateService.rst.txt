.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\TypoScript

.. php:class:: TemplateService

   Template object that is responsible for generating the TypoScript template based on template records.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php>`__.

   .. php:attr:: tt_track
   
      If set, the global tt-timeobject is used to log the performance.
      
      
   .. php:attr:: matchAlternative
   
      This array is passed on to matchObj by generateConfig().
      
      If it holds elements, they are used for matching instead. See comment at the match-class.
      Used for backend modules only. Never frontend!
      
      
   .. php:attr:: ext_regLinenumbers
   
      
   .. php:attr:: ext_regComments
   
      
   .. php:attr:: loaded
   
      Set, if the TypoScript template structure is loaded and OK, see ->start()
      
      
   .. php:attr:: setup
   
      
   .. php:attr:: flatSetup
   
      
   .. php:attr:: config
   
      For fetching TypoScript code from template hierarchy before parsing it.
      
      Each array contains code field values from template records/files:
      Setup field
      
      
   .. php:attr:: constants
   
      Constant field
      
      
   .. php:attr:: hierarchyInfo
   
      For Template Analyzer in backend
      
      
   .. php:attr:: rootLine
   
      The rootline from current page to the root page.
      
      This is exactly the same as $absoluteRootLine, just in reversed order, so
      first entry with key 0 is site-root page, last node is requested page with
      the highest key.
      This is set up by runThroughTemplates().
      
      
   .. php:attr:: sections
   
      Tracking all conditions found during parsing of TypoScript. Used for the "all" key in currentPageData
      
      
   .. php:attr:: clearList_const
   
      Used by Backend only (Typoscript Template Analyzer)
      
      
   .. php:attr:: clearList_setup
   
      Used by Backend only (Typoscript Template Analyzer)
      
      
   .. php:attr:: parserErrors
   
      
   .. php:attr:: setup_constants
   
      
   .. php:method:: getProcessExtensionStatics()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L299>`__.
      
      
   .. php:method:: setProcessExtensionStatics()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L307>`__.
      
      
   .. php:method:: setVerbose()
   
      sets the verbose parameter
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L316>`__.
      
      
   .. php:method:: matching(array $cc)
   
      Fetches data about which TypoScript-matches there are at this page. Then it performs a matchingtest.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L364>`__.
      
      :param array $cc: An array with three keys, "all", "rowSum" and "rootLine" - all coming from the "currentPageData" array
      
   .. php:method:: start(array $theRootLine)
   
      This is all about fetching the right TypoScript template structure. If it's not cached then it must be generated and cached!
      The method traverses the rootline structure from out to in, fetches the hierarchy of template records and based on this either finds the cached TypoScript template structure or parses the template and caches it for next time.
      
      Sets $this->setup to the parsed TypoScript template array
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L388>`__.
      
      :param array $theRootLine: The rootline of the current page (going ALL the way to tree root)
      
   .. php:method:: runThroughTemplates(array $theRootLine, int $start_template_uid)
   
      Traverses the rootLine from the root and out. For each page it checks if there is a template record. If there is a template record, $this->processTemplate() is called.
      
      Resets and affects internal variables like $this->constants, $this->config and $this->rowSum
      Also creates $this->rootLine which is a root line stopping at the root template (contrary to $this->getTypoScriptFrontendController()->rootLine which goes all the way to the root of the tree
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L513>`__.
      
      :param array $theRootLine: The rootline of the current page (going ALL the way to tree root)
      :param int $start_template_uid: Set specific template record UID to select; this is only for debugging/development/analysis use in backend modules like "Web > Template". For parsing TypoScript templates in the frontend it should be 0 (zero)
      
   .. php:method:: processTemplate(array $row, string $idList, int $pid, string $templateID, string $templateParent, string $includePath)
   
      Checks if the template ($row) has some included templates and after including them it fills the arrays with the setup
      Builds up $this->rowSum
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L593>`__.
      
      :param array $row: A full TypoScript template record (sys_template/forged "dummy" record made from static template file)
      :param string $idList: A list of already processed template ids including the current; The list is on the form "[prefix]_[uid]" where [prefix] is "sys" for "sys_template" records, records and "ext_" for static include files (from extensions). The list is used to check that the recursive inclusion of templates does not go into circles: Simply it is used to NOT include a template record/file which has already BEEN included somewhere in the recursion.
      :param int $pid: The PID of the input template record
      :param string $templateID: The id of the current template. Same syntax as $idList ids, eg. "sys_123
      :param string $templateParent: Parent template id (during recursive call); Same syntax as $idList ids, eg. "sys_123
      :param string $includePath: Specifies the path from which the template was included (used with static_includes)
      
   .. php:method:: generateConfig()
   
      Generates the configuration array by replacing constants and parsing the whole thing.
      
      Depends on $this->config and $this->constants to be set prior to this! (done by processTemplate/runThroughTemplates)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L902>`__.
      
      
   .. php:method:: getRootlineLevel(string $list)
   
      Returns the level of the given page in the rootline - Multiple pages can be given by separating the UIDs by comma.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L1090>`__.
      
      :param string $list: A list of UIDs for which the rootline-level should get returned
      
   .. php:method:: getRootId()
   
      Returns the page ID of the rootlevel
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/TypoScript/TemplateService.php#L1107>`__.
      
      :returntype: int
