.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Crypto\PasswordHashing

.. php:class:: PhpassPasswordHash

   Class that implements PHPass salted hashing based on Drupal's
   modified Openwall implementation.
   
   Derived from Drupal CMS
   original license: GNU General Public License (GPL)
   
   PHPass should work on every system.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php>`__.

   
   
   .. php:method:: checkPassword(string $plainPW, string $saltedHashPW)
   
      Method checks if a given plaintext password is correct by comparing it with
      a given salted hashed password.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php#L75>`__.
      
      :param string $plainPW: Plain-text password to compare with salted hash
      :param string $saltedHashPW: Salted hash to compare plain-text password with
      :returntype: bool
      :returns: TRUE, if plain-text password matches the salted hash, otherwise FALSE
      
   .. php:method:: isAvailable()
   
      Returns whether all prerequisites for the hashing methods are matched
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php#L86>`__.
      
      :returntype: bool
      :returns: Method available
      
   .. php:method:: getHashedPassword(string $password)
   
      Method creates a salted hash for a given plaintext password
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php#L97>`__.
      
      :param string $password: Plaintext password to create a salted hash from
      
   .. php:method:: isHashUpdateNeeded(string $passString)
   
      Checks whether a user's hashed password needs to be replaced with a new hash.
      
      This is typically called during the login process when the plain text
      password is available. A new hash is needed when the desired iteration
      count has changed through a change in the variable $hashCount or HASH_COUNT.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php#L117>`__.
      
      :param string $passString: Salted hash to check if it needs an update
      :returntype: bool
      :returns: TRUE if salted hash needs an update, otherwise FALSE
      
   .. php:method:: isValidSaltedPW(string $saltedPW)
   
      Method determines if a given string is a valid salted hashed password.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Crypto/PasswordHashing/PhpassPasswordHash.php#L133>`__.
      
      :param string $saltedPW: String to check
      :returntype: bool
      :returns: TRUE if it's valid salted hashed password, otherwise FALSE
