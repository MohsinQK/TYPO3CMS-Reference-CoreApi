.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Session

.. php:class:: UserSessionManager

   The purpose of the UserSessionManager is to create new user session objects (acting as a factory),
   depending on the need / request, and to fetch sessions from the Session Backend, effectively
   encapsulating all calls to the SessionManager
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php>`__.

   
   
   .. php:method:: createFromRequestOrAnonymous()
   
      sessionId is set to ses_id if a cookie is present in the request.
      
      Otherwise a new anonymous session will start.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L85>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: createFromGlobalCookieOrAnonymous()
   
      sessionId is set to ses_id if a cookie is present in $_COOKIE.
      
      Otherwise a new anonymous session will start.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L98>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: createAnonymousSession()
   
      Creates a non-fixated session without a user logged in
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L109>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: hasExpired()
   
      Check if a session has expired. This is the case if sessionLifetime is 0,
      or current time greater than sessionLifetime plus last update time of the session.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L136>`__.
      
      :returntype: bool
      
   .. php:method:: willExpire()
   
      Check if a session will expire within the given grace period.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L148>`__.
      
      :returntype: bool
      
   .. php:method:: fixateAnonymousSession(\UserSession $session, bool $isPermanent)
   
      Persists an anonymous session without a user logged in,
      in order to store session data between requests.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L163>`__.
      
      :param \UserSession $session: The user session to fixate
      :param bool $isPermanent: If TRUE, the session will get the is_permanent flag
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      :returns: a new session object with an updated ses_tstamp (allowing to keep the session alive)
      
   .. php:method:: elevateToFixatedUserSession(\UserSession $session, int $userId, bool $isPermanent)
   
      Removes existing entries, creates and returns a new user session record
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L188>`__.
      
      :param \UserSession $session: The user session to recreate
      :param int $userId: The user id the session belongs to
      :param bool $isPermanent: If TRUE, the session will get the is_permanent flag
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      :returns: The newly created user session object
      
   .. php:method:: regenerateSession(string $sessionId, array $existingSessionRecord, bool $anonymous)
   
      Regenerate the session ID and transfer the session to new ID
      Call this method whenever a user proceeds to a higher authorization level
      e.g. when an anonymous session is now authenticated.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L222>`__.
      
      :param string $sessionId: The session id
      :param array $existingSessionRecord: If given, this session record will be used instead of fetching again
      :param bool $anonymous: If true session will be regenerated as anonymous session
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: updateSessionTimestamp()
   
      Updates the session timestamp for the given user session if
      the session is marked as "needs update" (which means the current
      timestamp is greater than "last updated + a specified gracetime-value".
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L249>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      :returns: a modified user session with a last updated value if needed
      
   .. php:method:: isSessionPersisted(TYPO3\\CMS\\Core\\Session\\UserSession session)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L259>`__.
      
      :param TYPO3\\CMS\\Core\\Session\\UserSession $session: the session
      :returntype: bool
      
   .. php:method:: removeSession(TYPO3\\CMS\\Core\\Session\\UserSession session)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L264>`__.
      
      :param TYPO3\\CMS\\Core\\Session\\UserSession $session: the session
      
   .. php:method:: updateSession(TYPO3\\CMS\\Core\\Session\\UserSession session)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L269>`__.
      
      :param TYPO3\\CMS\\Core\\Session\\UserSession $session: the session
      :returntype: TYPO3\\CMS\\Core\\Session\\UserSession
      
   .. php:method:: collectGarbage(int garbageCollectionProbability = 1)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L275>`__.
      
      :param int $garbageCollectionProbability: the garbageCollectionProbability, default: 1
      
   .. php:method:: create()
   
      Create a UserSessionManager instance for the given login type. Has several optional arguments used for testing purposes
      to inject dummy objects if needed.
      
      Ideally, this factory encapsulates all "TYPO3_CONF_VARS" options, so the actual object does not need to consider any
      global state.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L341>`__.
      
      :returntype: self
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Session/UserSessionManager.php#L21>`__.
