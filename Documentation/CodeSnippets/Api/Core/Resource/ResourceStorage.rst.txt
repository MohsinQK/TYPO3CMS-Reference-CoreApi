.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Resource

.. php:class:: ResourceStorage

   A "mount point" inside the TYPO3 file handling.
   
   A "storage" object handles
   - abstraction to the driver
   - permissions (from the driver, and from the user, + capabilities)
   - an entry point for files, folders, and for most other operations
   
   == Driver entry point
   The driver itself, that does the actual work on the file system,
   is inside the storage but completely shadowed by
   the storage, as the storage also handles the abstraction to the
   driver
   
   The storage can be on the local system, but can also be on a remote
   system. The combination of driver + configurable capabilities (storage
   is read-only e.g.) allows for flexible uses.
   
   
   == Permission system
   As all requests have to run through the storage, the storage knows about the
   permissions of a BE/FE user, the file permissions / limitations of the driver
   and has some configurable capabilities.
   Additionally, a BE user can use "filemounts" (known from previous installations)
   to limit his/her work-zone to only a subset (identifier and its subfolders/subfolders)
   of the user itself.
   
   Check 1: "User Permissions" [is the user allowed to write a file) [is the user allowed to write a file]
   Check 2: "File Mounts" of the User (act as subsets / filters to the identifiers) [is the user allowed to do something in this folder?]
   Check 3: "Capabilities" of Storage (then: of Driver) [is the storage/driver writable?]
   Check 4: "File permissions" of the Driver [is the folder writable?]
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php>`__.

   .. php:const:: PROCESSING_FOLDER_LEVELS
   
      :php:`2`, type integer
      
      .. php:const:: CAPABILITY_BROWSABLE
   
      :php:`1`, type integer
      
      .. php:const:: CAPABILITY_PUBLIC
   
      :php:`2`, type integer
      
      .. php:const:: CAPABILITY_WRITABLE
   
      :php:`4`, type integer
      
      .. php:const:: CAPABILITY_HIERARCHICAL_IDENTIFIERS
   
      :php:`8`, type integer
      
      .. php:const:: DEFAULT_ProcessingFolder
   
      :php:`'_processed_'`, type string
      
      
   
   .. php:method:: getConfiguration()
   
      Gets the configuration.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L283>`__.
      
      
   .. php:method:: setConfiguration()
   
      Sets the configuration.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L293>`__.
      
      
   .. php:method:: getStorageRecord()
   
      Gets the storage record.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L303>`__.
      
      
   .. php:method:: setDriver()
   
      Sets the storage that belongs to this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L314>`__.
      
      
   .. php:method:: getName()
   
      Returns the name of this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L335>`__.
      
      
   .. php:method:: getUid()
   
      Returns the UID of this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L345>`__.
      
      
   .. php:method:: hasChildren()
   
      Tells whether there are children in this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L355>`__.
      
      
   .. php:method:: getCapabilities()
   
      Returns the capabilities of this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L372>`__.
      
      
   .. php:method:: isPublic()
   
      Returns TRUE if this storage is publicly available. This is just a
      configuration option and does not mean that it really *is* public. OTOH
      a storage that is marked as not publicly available will trigger the file
      publishing mechanisms of TYPO3.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L396>`__.
      
      
   .. php:method:: isWritable()
   
      Returns TRUE if this storage is writable. This is determined by the
      driver and the storage configuration; user permissions are not taken into account.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L407>`__.
      
      
   .. php:method:: isBrowsable()
   
      Returns TRUE if this storage is browsable by a (backend) user of TYPO3.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L417>`__.
      
      
   .. php:method:: hasHierarchicalIdentifiers()
   
      Returns TRUE if this storage stores folder structure in file identifiers.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L427>`__.
      
      :returntype: bool
      
   .. php:method:: searchFiles(bool $useFilters)
   
      Search for files in a storage based on given restrictions
      and a possibly given folder.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L441>`__.
      
      :param bool $useFilters: Whether storage filters should be applied
      :returntype: TYPO3\\CMS\\Core\\Resource\\Search\\Result\\FileSearchResultInterface
      
   .. php:method:: usesCaseSensitiveIdentifiers()
   
      Returns TRUE if the identifiers used by this storage are case-sensitive.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L462>`__.
      
      
   .. php:method:: isOnline()
   
      Returns TRUE if this storage is browsable by a (backend) user of TYPO3.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L472>`__.
      
      
   .. php:method:: autoExtractMetadataEnabled()
   
      Returns TRUE if auto extracting of metadata is enabled
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L508>`__.
      
      
   .. php:method:: markAsPermanentlyOffline()
   
      Blows the "fuse" and marks the storage as offline.
      
      Can only be modified by an admin.
      
      Typically, this is only done if the configuration is wrong.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L520>`__.
      
      
   .. php:method:: markAsTemporaryOffline()
   
      Marks this storage as offline for the next 5 minutes.
      
      Non-permanent: This typically happens for remote storages
      that are "flaky" and not available all the time.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L542>`__.
      
      
   .. php:method:: addFileMount()
   
      Adds a filemount as a "filter" for users to only work on a subset of a
      storage object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L562>`__.
      
      
   .. php:method:: getFileMounts()
   
      Returns all file mounts that are registered with this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L602>`__.
      
      
   .. php:method:: isWithinFileMountBoundaries(\ResourceInterface $subject, bool $checkWriteAccess)
   
      Checks if the given subject is within one of the registered user
      file mounts. If not, working with the file is not permitted for the user.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L615>`__.
      
      :param \ResourceInterface $subject: file or folder
      :param bool $checkWriteAccess: If true, it is not only checked if the subject is within the file mount but also whether it isn't a read only file mount
      
   .. php:method:: setEvaluatePermissions()
   
      Sets whether the permissions to access or write
      into this storage should be checked or not.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L658>`__.
      
      
   .. php:method:: getEvaluatePermissions()
   
      Gets whether the permissions to access or write
      into this storage should be checked or not.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L669>`__.
      
      
   .. php:method:: setUserPermissions()
   
      Sets the user permissions of the storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L679>`__.
      
      
   .. php:method:: checkUserActionPermission(string $type)
   
      Checks if the ACL settings allow for a certain action
      (is a user allowed to read a file or copy a folder).
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L692>`__.
      
      :param string $type: either File or Folder
      
   .. php:method:: checkFileActionPermission(string $action)
   
      Checks if a file operation (= action) is allowed on a
      File/Folder/Storage (= subject).
      
      This method, by design, does not throw exceptions or do logging.
      Besides the usage from other methods in this class, it is also used by
      the Filelist UI to check whether an action is allowed and whether action
      related UI elements should thus be shown (move icon, edit icon, etc.)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L719>`__.
      
      :param string $action: action, can be read, write, delete, editMeta
      
   .. php:method:: checkFolderActionPermission()
   
      Checks if a folder operation (= action) is allowed on a Folder.
      
      This method, by design, does not throw exceptions or do logging.
      See the checkFileActionPermission() method above for the reasons.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L786>`__.
      
      
   .. php:method:: sanitizeFileName(string $fileName, \Folder|null $targetFolder)
   
      Clean up a fileName from not allowed characters
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1218>`__.
      
      :param string $fileName: The name of the file to be sanitized
      :param \Folder|null $targetFolder: The target folder where the file is located or should be added
      
   .. php:method:: addFile(string $localFilePath, \Folder $targetFolder, string $targetFileName, string $conflictMode, bool $removeOriginal)
   
      Moves a file from the local filesystem to this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1247>`__.
      
      :param string $localFilePath: The file on the server's hard disk to add
      :param \Folder $targetFolder: The target folder where the file should be added
      :param string $targetFileName: The name of the file to be add, If not set, the local file name is used
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      :param bool $removeOriginal: if set the original file will be removed after successful operation
      
   .. php:method:: hashFile()
   
      Creates a (cryptographic) hash for a file.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1318>`__.
      
      
   .. php:method:: hashFileByIdentifier()
   
      Creates a (cryptographic) hash for a fileIdentifier.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1331>`__.
      
      
   .. php:method:: hashFileIdentifier()
   
      Hashes a file identifier, taking the case sensitivity of the file system
      into account. This helps mitigating problems with case-insensitive
      databases.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1348>`__.
      
      
   .. php:method:: getPublicUrl(\ResourceInterface $resourceObject)
   
      Returns a publicly accessible URL for a file.
      
      WARNING: Access to the file may be restricted by further means, e.g.
      some web-based authentication. You have to take care of this yourself.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1366>`__.
      
      :param \ResourceInterface $resourceObject: The file or folder object
      
   .. php:method:: processFile(\FileInterface $fileObject)
   
      Passes a file to the File Processing Services and returns the resulting ProcessedFile object.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1416>`__.
      
      :param \FileInterface $fileObject: The file object
      
   .. php:method:: getFileForLocalProcessing()
   
      Copies a file from the storage for local processing.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1433>`__.
      
      
   .. php:method:: getFile()
   
      Gets a file by identifier.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1445>`__.
      
      
   .. php:method:: getFileByIdentifier()
   
      Gets a file object from storage by file identifier
      If the file is outside of the process folder, it gets indexed and returned as file object afterwards
      If the file is within processing folder, the file object will be directly returned
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1462>`__.
      
      
   .. php:method:: unsetFileAndFolderNameFilters()
   
      Unsets the file and folder name filters, thus making this storage return unfiltered filelists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1507>`__.
      
      
   .. php:method:: resetFileAndFolderNameFiltersToDefault()
   
      Resets the file and folder name filters to the default values defined in the TYPO3 configuration.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1515>`__.
      
      
   .. php:method:: getFileAndFolderNameFilters()
   
      Returns the file and folder name filters used by this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1538>`__.
      
      
   .. php:method:: setFileAndFolderNameFilters()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1547>`__.
      
      
   .. php:method:: addFileAndFolderNameFilter()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1556>`__.
      
      
   .. php:method:: getFolderIdentifierFromFileIdentifier()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1566>`__.
      
      
   .. php:method:: getFileInFolder()
   
      Get file from folder
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1578>`__.
      
      
   .. php:method:: getFilesInFolder(string $sort, bool $sortRev)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1599>`__.
      
      :param string $sort: Property name used to sort the items.
      Among them may be: '' (empty, no sorting), name,
      fileext, size, tstamp and rw.
      If a driver does not support the given property, it
      should fall back to "name".
      :param bool $sortRev: TRUE to indicate reverse sorting (last to first)
      
   .. php:method:: getFileIdentifiersInFolder()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1633>`__.
      
      
   .. php:method:: countFilesInFolder()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1646>`__.
      
      
   .. php:method:: getFolderIdentifiersInFolder()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1659>`__.
      
      
   .. php:method:: hasFile()
   
      Returns TRUE if the specified file exists
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1671>`__.
      
      
   .. php:method:: getProcessingFolders()
   
      Get all processing folders that live in this storage
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1685>`__.
      
      
   .. php:method:: isProcessingFolder()
   
      Returns TRUE if folder that is in current storage  is set as
      processing folder for one of the existing storages
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1716>`__.
      
      
   .. php:method:: hasFileInFolder()
   
      Checks if the queried file in the given folder exists
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1735>`__.
      
      
   .. php:method:: getFileContents()
   
      Get contents of a file object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1749>`__.
      
      
   .. php:method:: streamFile(bool $asDownload, string $alternativeFilename, string $overrideMimeType)
   
      Returns a PSR-7 Response which can be used to stream the requested file
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1764>`__.
      
      :param bool $asDownload: If set Content-Disposition attachment is sent, inline otherwise
      :param string $alternativeFilename: the filename for the download (if $asDownload is set)
      :param string $overrideMimeType: If set this will be used as Content-Type header instead of the automatically detected mime type.
      :returntype: Psr\\Http\\Message\\ResponseInterface
      
   .. php:method:: setFileContents()
   
      Set contents of a file object.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1826>`__.
      
      
   .. php:method:: createFile(string $fileName, \Folder $targetFolderObject)
   
      Creates a new file
      
      previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::func_newfile()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1856>`__.
      
      :param string $fileName: The name of the file to be created
      :param \Folder $targetFolderObject: The target folder where the file should be created
      
   .. php:method:: deleteFile()
   
      Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::deleteFile()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1877>`__.
      
      
   .. php:method:: copyFile(string $targetFileName, string $conflictMode)
   
      Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::func_copy()
      copies a source file (from any location) in to the target
      folder, the latter has to be part of this storage
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1931>`__.
      
      :param string $targetFileName: an optional destination fileName
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      
   .. php:method:: moveFile(string $targetFileName, string $conflictMode)
   
      Moves a $file into a $targetFolder
      the target folder has to be part of this storage
      
      previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::func_move()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L1984>`__.
      
      :param string $targetFileName: an optional destination fileName
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      
   .. php:method:: renameFile()
   
      Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::func_rename()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2051>`__.
      
      
   .. php:method:: replaceFile()
   
      Replaces a file with a local file (e.g. a freshly uploaded file)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2104>`__.
      
      
   .. php:method:: addUploadedFile(array|\UploadedFile $uploadedFileData, \Folder|null $targetFolder, string|null $targetFileName, string $conflictMode)
   
      Adds an uploaded file into the Storage. Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::file_upload()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2132>`__.
      
      :param array|\UploadedFile $uploadedFileData: contains information about the uploaded file given by $_FILES['file1']
      :param \Folder|null $targetFolder: the target folder
      :param string|null $targetFileName: the file name to be written
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      
   .. php:method:: moveFolder(\Folder $folderToMove, \Folder $targetParentFolder, string $conflictMode)
   
      Moves a folder. If you want to move a folder from this storage to another
      one, call this method on the target storage, otherwise you will get an exception.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2205>`__.
      
      :param \Folder $folderToMove: The folder to move.
      :param \Folder $targetParentFolder: The target parent folder
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      
   .. php:method:: copyFolder(\FolderInterface $folderToCopy, \FolderInterface $targetParentFolder, string $conflictMode)
   
      Copies a folder.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2269>`__.
      
      :param \FolderInterface $folderToCopy: The folder to copy
      :param \FolderInterface $targetParentFolder: The target folder
      :param string $conflictMode: a value of the DuplicationBehavior enumeration
      
   .. php:method:: renameFolder()
   
      Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::folder_move()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2333>`__.
      
      
   .. php:method:: deleteFolder()
   
      Previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::folder_delete()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2377>`__.
      
      
   .. php:method:: getFolderInFolder(string $folderName)
   
      Returns the Identifier for a folder within a given folder.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2411>`__.
      
      :param string $folderName: The name of the target folder
      
   .. php:method:: getFoldersInFolder(string $sort, bool $sortRev)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2431>`__.
      
      :param string $sort: Property name used to sort the items.
      Among them may be: '' (empty, no sorting), name,
      fileext, size, tstamp and rw.
      If a driver does not support the given property, it
      should fall back to "name".
      :param bool $sortRev: TRUE to indicate reverse sorting (last to first)
      
   .. php:method:: countFoldersInFolder()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2460>`__.
      
      
   .. php:method:: hasFolder()
   
      Returns TRUE if the specified folder exists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2473>`__.
      
      
   .. php:method:: hasFolderInFolder()
   
      Checks if the given file exists in the given folder
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2486>`__.
      
      
   .. php:method:: createFolder(string $folderName, \Folder $parentFolder)
   
      Creates a new folder.
      
      previously in \TYPO3\CMS\Core\Utility\File\ExtendedFileUtility::func_newfolder()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2505>`__.
      
      :param string $folderName: The new folder name
      :param \Folder $parentFolder: (optional) the parent folder to create the new folder inside of. If not given, the root folder is used
      
   .. php:method:: getFolderInfo()
   
      Retrieves information about a folder
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2539>`__.
      
      
   .. php:method:: getDefaultFolder()
   
      Returns the default folder where new files are stored if no other folder is given.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2549>`__.
      
      
   .. php:method:: getFolder()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2562>`__.
      
      
   .. php:method:: isWithinProcessingFolder()
   
      Returns TRUE if the specified file is in a folder that is set a processing for a storage
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2597>`__.
      
      
   .. php:method:: isWithinFolder()
   
      Checks if a resource (file or folder) is within the given folder
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2617>`__.
      
      
   .. php:method:: getRootLevelFolder()
   
      Returns the folders on the root level of the storage
      or the first mount point of this storage for this user
      if $respectFileMounts is set.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2636>`__.
      
      
   .. php:method:: getRole(\FolderInterface $folder)
   
      Gets the role of a folder.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2728>`__.
      
      :param \FolderInterface $folder: Folder object to get the role from
      
   .. php:method:: getProcessingFolder(\File $file)
   
      Getter function to return the folder where the files can
      be processed. Does not check for access rights here.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2759>`__.
      
      :param \File $file: Specific file you want to have the processing folder for
      
   .. php:method:: getDriverType()
   
      Gets the driver Type configured for this storage.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2886>`__.
      
      
   .. php:method:: setDefault()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2904>`__.
      
      
   .. php:method:: isDefault()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2912>`__.
      
      
   .. php:method:: getResourceFactoryInstance()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Resource/ResourceStorage.php#L2920>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Resource\\ResourceFactory
