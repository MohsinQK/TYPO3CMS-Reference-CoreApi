.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Utility

.. php:class:: PathUtility

   Class with helper functions for file paths.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php>`__.

   .. php:method:: getRelativePathTo(string absolutePath)
   
      Gets the relative path from the current used script to a given directory.
      
      The allowed TYPO3 path is checked as well, thus it's not possible to go to upper levels.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L32>`__.
      
      :param string $absolutePath: the absolutePath
      :returntype: string
      
   .. php:method:: getAbsoluteWebPath(string $targetPath, bool $prefixWithSitePath)
   
      Creates an absolute URL out of really any input path, removes '../' parts for the targetPath
      
      TODO: And this exactly is a big issue as it mixes file system paths with (relative) URLs
      TODO: Additionally it depends on the current request and can not do its job on CLI
      TODO: deprecate entirely and replace with stricter API
      
      Until we have a replacement for this API, the safest way to call this method is by providing absolute filesystem paths
      and use \TYPO3\CMS\Core\Utility\PathUtility::getPublicResourceWebPath whenever possible.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L51>`__.
      
      :param string $targetPath: can be "../typo3conf/ext/myext/myfile.js" or "/myfile.js"
      :param bool $prefixWithSitePath: Don't use this argument. It is only used by TYPO3 in one place, which are subject to removal.
      :returntype: string
      :returns: something like "/mysite/typo3conf/ext/myext/myfile.js"
      
   .. php:method:: isExtensionPath()
   
      Checks whether the given path is an extension resource
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L121>`__.
      
      :returntype: bool
      
   .. php:method:: getRelativePath(string $sourcePath, string $targetPath)
   
      Gets the relative path from a source directory to a target directory.
      
      The allowed TYPO3 path is checked as well, thus it's not possible to go to upper levels.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L134>`__.
      
      :param string $sourcePath: Absolute source path
      :param string $targetPath: Absolute target path
      :returntype: string
      
   .. php:method:: getCommonPrefix(string[] $paths)
   
      Gets the common path prefix out of many paths.
      
      + /var/www/domain.com/typo3/sysext/frontend/
      + /var/www/domain.com/typo3/sysext/em/
      + /var/www/domain.com/typo3/sysext/file/
      = /var/www/domain.com/typo3/sysext/
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L171>`__.
      
      :param string[] $paths: Paths to be processed
      :returntype: string
      
   .. php:method:: sanitizeTrailingSeparator(string $path, string $separator)
   
      Normalizes a trailing separator.
      
      (e.g. 'some/path' -> 'some/path/')
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L210>`__.
      
      :param string $path: The path to be sanitized
      :param string $separator: The separator to be used
      :returntype: string
      
   .. php:method:: basename()
   
      Returns trailing name component of path
      
      Since basename() is locale dependent we need to access
      the filesystem with the same locale of the system, not
      the rendering context.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L228>`__.
      
      :returntype: string
      
   .. php:method:: dirname()
   
      Returns parent directory's path
      
      Since dirname() is locale dependent we need to access
      the filesystem with the same locale of the system, not
      the rendering context.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L254>`__.
      
      :returntype: string
      
   .. php:method:: pathinfo(string path, int options = 15)
   
      Returns parent directory's path
      
      Since pathinfo() is locale dependent we need to access
      the filesystem with the same locale of the system, not
      the rendering context.
      
      The valid flags for $options are the same as for the built-in
      phpinfo() function.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L281>`__.
      
      :param string $path: the path
      :param int $options: the options, default: 15
      :returntype: array|string
      
   .. php:method:: isAbsolutePath(string path)
   
      Checks if the $path is absolute or relative (detecting either '/' or 'x:/' as first part of string) and returns TRUE if so.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L297>`__.
      
      :param string $path: the path
      :returntype: bool
      
   .. php:method:: getAbsolutePathOfRelativeReferencedFileOrPath(string $baseFilenameOrPath, string $includeFileName)
   
      Gets the (absolute) path of an include file based on the (absolute) path of a base file
      
      Does NOT do any sanity checks. This is a task for the calling function, e.g.
      call GeneralUtility::getFileAbsFileName() on the result.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L330>`__.
      
      :param string $baseFilenameOrPath: The name of the file or a path that serves as a base; a path will need to have a '/' at the end
      :param string $includeFileName: The name of the file that is included in the file
      :returntype: string
      :returns: The (absolute) path of the include file
      
   .. php:method:: dirnameDuringBootstrap()
   
      Returns parent directory's path
      Early during bootstrap there is no TYPO3_CONF_VARS yet so the setting for the system locale
      is also unavailable. The path of the parent directory is determined with a regular expression
      to avoid issues with locales.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L349>`__.
      
      :returntype: string
      :returns: Path without trailing slash
      
   .. php:method:: basenameDuringBootstrap()
   
      Returns filename part of a path
      Early during bootstrap there is no TYPO3_CONF_VARS yet so the setting for the system locale
      is also unavailable. The filename part is determined with a regular expression to avoid issues
      with locales.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L364>`__.
      
      :returntype: string
      
   .. php:method:: getCanonicalPath(string $path)
   
      Resolves all dots, slashes and removes spaces after or before a path.
      
      ..
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/PathUtility.php#L380>`__.
      
      :param string $path: Input string
      :returntype: string
      :returns: Canonical path, always without trailing slash
