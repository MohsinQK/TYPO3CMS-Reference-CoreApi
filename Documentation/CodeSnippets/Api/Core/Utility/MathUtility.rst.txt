.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Utility

.. php:class:: MathUtility

   Class with helper functions for mathematical calculations
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php>`__.

   .. php:method:: forceIntegerInRange(mixed $theInt, int $min, int $max, int $defaultValue)
   
      Forces the integer $theInt into the boundaries of $min and $max. If the $theInt is FALSE then the $defaultValue is applied.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L33>`__.
      
      :param mixed $theInt: Input value - will be cast to int if non-integer value is passed.
      :param int $min: Lower limit
      :param int $max: Higher limit
      :param int $defaultValue: Default value if input is FALSE.
      :returntype: int
      :returns: The input value forced into the boundaries of $min and $max
      
   .. php:method:: convertToPositiveInteger(mixed theInt)
   
      Returns $theInt if it is greater than zero, otherwise returns zero.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L54>`__.
      
      :param mixed $theInt: the theInt
      :returntype: int
      
   .. php:method:: canBeInterpretedAsInteger(mixed $var)
   
      Tests if the input can be interpreted as integer.
      
      Note: Integer casting from objects or arrays is considered undefined and thus will return false.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L68>`__.
      
      :param mixed $var: Any input variable to test
      :returntype: bool
      :returns: Returns TRUE if string is an integer
      
   .. php:method:: canBeInterpretedAsFloat(mixed $var)
   
      Tests if the input can be interpreted as float.
      
      Note: Float casting from objects or arrays is considered undefined and thus will return false.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L85>`__.
      
      :param mixed $var: Any input variable to test
      :returntype: bool
      :returns: Returns TRUE if string is a float
      
   .. php:method:: calculateWithPriorityToAdditionAndSubtraction(string $string)
   
      Calculates the input by +,-,*,/,%,^ with priority to + and -
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L106>`__.
      
      :param string $string: Input string, eg "123 + 456 / 789 - 4
      :returntype: string|float
      :returns: Calculated value. Or error string.
      
   .. php:method:: calculateWithParentheses(string $string)
   
      Calculates the input with parenthesis levels
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L166>`__.
      
      :param string $string: Input string, eg "(123 + 456) / 789 - 4
      :returntype: string
      :returns: Calculated value. Or error string.
      
   .. php:method:: isIntegerInRange(mixed $value, int $minimum, int $maximum)
   
      Checks whether the given number $value is an integer in the range [$minimum;$maximum]
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Utility/MathUtility.php#L196>`__.
      
      :param mixed $value: Integer value to check. If not an integer this method always returns false.
      :param int $minimum: Lower boundary of the range
      :param int $maximum: Upper boundary of the range
      :returntype: bool
