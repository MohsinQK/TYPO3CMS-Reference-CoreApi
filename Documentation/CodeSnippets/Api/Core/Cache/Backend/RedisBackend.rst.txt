.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Cache\Backend

.. php:class:: RedisBackend

   A caching backend which stores cache entries by using Redis with phpredis
   PHP module. Redis is a noSQL database with very good scaling characteristics
   in proportion to the amount of entries and data size.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php>`__.

   .. php:const:: FAKED_UNLIMITED_LIFETIME
   
      :php:`31536000`, type integer
      
      .. php:const:: IDENTIFIER_DATA_PREFIX
   
      :php:`'identData:'`, type string
      
      .. php:const:: IDENTIFIER_TAGS_PREFIX
   
      :php:`'identTags:'`, type string
      
      .. php:const:: TAG_IDENTIFIERS_PREFIX
   
      :php:`'tagIdents:'`, type string
      
      .. php:const:: DATETIME_EXPIRYTIME_UNLIMITED
   
      :php:`'9999-12-31T23:59:59+0000'`, type string
      
      .. php:const:: UNLIMITED_LIFETIME
   
      :php:`0`, type integer
      
      
   
   .. php:method:: initializeObject()
   
      Initializes the redis backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L153>`__.
      
      
   .. php:method:: setPersistentConnection()
   
      Setter for persistent connection
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L186>`__.
      
      
   .. php:method:: setHostname(string $hostname)
   
      Setter for server hostname
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L196>`__.
      
      :param string $hostname: Hostname
      
   .. php:method:: setPort(int $port)
   
      Setter for server port
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L206>`__.
      
      :param int $port: Port
      
   .. php:method:: setDatabase(int $database)
   
      Setter for database number
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L217>`__.
      
      :param int $database: Database
      
   .. php:method:: setPassword(string $password)
   
      Setter for authentication password
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L233>`__.
      
      :param string $password: Password
      
   .. php:method:: setCompression(bool $compression)
   
      Enable data compression
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L244>`__.
      
      :param bool $compression: TRUE to enable compression
      
   .. php:method:: setCompressionLevel(int $compressionLevel)
   
      Set data compression level.
      
      If compression is enabled and this is not set,
      gzcompress default level will be used.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L260>`__.
      
      :param int $compressionLevel: -1 to 9: Compression level
      
   .. php:method:: setConnectionTimeout(int $connectionTimeout)
   
      Set connection timeout.
      
      This value in seconds is used as a maximum number
      of seconds to wait if a connection can be established.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L280>`__.
      
      :param int $connectionTimeout: limit in seconds, a value greater or equal than 0
      
   .. php:method:: set(string $entryIdentifier, string $data, array $tags, int $lifetime)
   
      Save data in the cache
      
      Scales O(1) with number of cache entries
      Scales O(n) with number of tags
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L306>`__.
      
      :param string $entryIdentifier: Identifier for this specific cache entry
      :param string $data: Data to be stored
      :param array $tags: Tags to associate with this cache entry
      :param int $lifetime: Lifetime of this cache entry in seconds. If NULL is specified, default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: get(string $entryIdentifier)
   
      Loads data from the cache.
      
      Scales O(1) with number of cache entries
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L358>`__.
      
      :param string $entryIdentifier: An identifier which describes the cache entry to load
      
   .. php:method:: has(string $entryIdentifier)
   
      Checks if a cache entry with the specified identifier exists.
      
      Scales O(1) with number of cache entries
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L382>`__.
      
      :param string $entryIdentifier: Identifier specifying the cache entry
      
   .. php:method:: remove(string $entryIdentifier)
   
      Removes all cache entries matching the specified identifier.
      
      Scales O(1) with number of cache entries
      Scales O(n) with number of tags
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L400>`__.
      
      :param string $entryIdentifier: Specifies the cache entry to remove
      
   .. php:method:: findIdentifiersByTag(string $tag)
   
      Finds and returns all cache entry identifiers which are tagged by the
      specified tag.
      
      Scales O(1) with number of cache entries
      Scales O(n) with number of tag entries
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L432>`__.
      
      :param string $tag: The tag to search for
      
   .. php:method:: flush()
   
      Removes all cache entries of this cache.
      
      Scales O(1) with number of cache entries
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L449>`__.
      
      
   .. php:method:: flushByTag(string $tag)
   
      Removes all cache entries of this cache which are tagged with the specified tag.
      
      Scales O(1) with number of cache entries
      Scales O(n^2) with number of tag entries
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L465>`__.
      
      :param string $tag: Tag the entries must have
      
   .. php:method:: collectGarbage()
   
      With the current internal structure, only the identifier to data entries
      have a redis internal lifetime. If an entry expires, attached
      identifier to tags and tag to identifiers entries will be left over.
      
      This methods finds those entries and cleans them up.
      
      Scales O(n*m) with number of cache entries (n) and number of tags (m)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L486>`__.
      
      
   .. php:method:: setCache(\FrontendInterface $cache)
   
      Sets a reference to the cache frontend which uses this backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L93>`__.
      
      :param \FrontendInterface $cache: The frontend for this backend
      
   .. php:method:: setDefaultLifetime(int $defaultLifetime)
   
      Sets the default lifetime for this cache backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L105>`__.
      
      :param int $defaultLifetime: Default lifetime of this cache backend in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: flushByTags()
   
      Backwards compatibility safeguard since re-introducing flushByTags as API.
      
      See https://review.typo3.org/#/c/50537/ comments for patch set 14.
      
      The method is here even though it is only required for TaggableBackendInterface.
      We add it here to ensure third party cache backends do not fail but instead
      delegate to a less efficient linear flushing behavior.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L123>`__.
      
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/RedisBackend.php#L21>`__.
