.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Cache\Backend

.. php:class:: abstract AbstractBackend

   An abstract caching backend
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php>`__.

   .. php:const:: DATETIME_EXPIRYTIME_UNLIMITED
   
      :php:`'9999-12-31T23:59:59+0000'`, type string
      
      .. php:const:: UNLIMITED_LIFETIME
   
      :php:`0`, type integer
      
      
   
   .. php:method:: setCache(\FrontendInterface $cache)
   
      Sets a reference to the cache frontend which uses this backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L93>`__.
      
      :param \FrontendInterface $cache: The frontend for this backend
      
   .. php:method:: setDefaultLifetime(int $defaultLifetime)
   
      Sets the default lifetime for this cache backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L105>`__.
      
      :param int $defaultLifetime: Default lifetime of this cache backend in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: flushByTags()
   
      Backwards compatibility safeguard since re-introducing flushByTags as API.
      
      See https://review.typo3.org/#/c/50537/ comments for patch set 14.
      
      The method is here even though it is only required for TaggableBackendInterface.
      We add it here to ensure third party cache backends do not fail but instead
      delegate to a less efficient linear flushing behavior.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L123>`__.
      
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L21>`__.
      
      
   .. php:method:: set(string $entryIdentifier, string $data, array $tags, int $lifetime)
   
      Saves data in the cache.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L42>`__.
      
      :param string $entryIdentifier: An identifier for this specific cache entry
      :param string $data: The data to be stored
      :param array $tags: Tags to associate with this cache entry. If the backend does not support tags, this option can be ignored.
      :param int $lifetime: Lifetime of this cache entry in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: get(string $entryIdentifier)
   
      Loads data from the cache.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L50>`__.
      
      :param string $entryIdentifier: An identifier which describes the cache entry to load
      
   .. php:method:: has(string $entryIdentifier)
   
      Checks if a cache entry with the specified identifier exists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L58>`__.
      
      :param string $entryIdentifier: An identifier specifying the cache entry
      
   .. php:method:: remove(string $entryIdentifier)
   
      Removes all cache entries matching the specified identifier.
      
      Usually this only affects one entry but if - for what reason ever -
      old entries for the identifier still exist, they are removed as well.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L68>`__.
      
      :param string $entryIdentifier: Specifies the cache entry to remove
      
   .. php:method:: flush()
   
      Removes all cache entries of this cache.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L73>`__.
      
      
   .. php:method:: collectGarbage()
   
      Does garbage collection
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/AbstractBackend.php#L78>`__.
