.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Cache\Backend

.. php:class:: FileBackend

   A caching backend which stores cache entries in files
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php>`__.

   .. php:const:: SEPARATOR
   
      :php:`'^'`, type string
      
      .. php:const:: EXPIRYTIME_FORMAT
   
      :php:`'YmdHis'`, type string
      
      .. php:const:: EXPIRYTIME_LENGTH
   
      :php:`14`, type integer
      
      .. php:const:: DATASIZE_DIGITS
   
      :php:`10`, type integer
      
      .. php:const:: DATETIME_EXPIRYTIME_UNLIMITED
   
      :php:`'9999-12-31T23:59:59+0000'`, type string
      
      .. php:const:: UNLIMITED_LIFETIME
   
      :php:`0`, type integer
      
      
   
   .. php:method:: freeze()
   
      Freezes this cache backend.
      
      All data in a frozen backend remains unchanged and methods which try to add
      or modify data result in an exception thrown. Possible expiry times of
      individual cache entries are ignored.
      
      On the positive side, a frozen cache backend is much faster on read access.
      A frozen backend can only be thawed by calling the flush() method.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L63>`__.
      
      
   .. php:method:: isFrozen()
   
      Tells if this backend is frozen.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L90>`__.
      
      
   .. php:method:: setCache(\FrontendInterface $cache)
   
      Sets a reference to the cache frontend which uses this backend and
      initializes the default cache directory.
      
      This method also detects if this backend is frozen and sets the internal
      flag accordingly.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L104>`__.
      
      :param \FrontendInterface $cache: The cache frontend
      
   .. php:method:: set(string $entryIdentifier, string $data, array $tags, int $lifetime)
   
      Saves data in a cache file.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L125>`__.
      
      :param string $entryIdentifier: An identifier for this specific cache entry
      :param string $data: The data to be stored
      :param array $tags: Tags to associate with this cache entry
      :param int $lifetime: Lifetime of this cache entry in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: get(string $entryIdentifier)
   
      Loads data from a cache file.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L169>`__.
      
      :param string $entryIdentifier: An identifier which describes the cache entry to load
      
   .. php:method:: has()
   
      Checks if a cache entry with the specified identifier exists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L198>`__.
      
      
   .. php:method:: remove(string $entryIdentifier)
   
      Removes all cache entries matching the specified identifier.
      
      Usually this only affects one entry.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L218>`__.
      
      :param string $entryIdentifier: Specifies the cache entry to remove
      
   .. php:method:: findIdentifiersByTag(string $searchedTag)
   
      Finds and returns all cache entry identifiers which are tagged by the
      specified tag.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L233>`__.
      
      :param string $searchedTag: The tag to search for
      
   .. php:method:: flush()
   
      Removes all cache entries of this cache and sets the frozen flag to FALSE.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L269>`__.
      
      
   .. php:method:: flushByTag(string $tag)
   
      Removes all cache entries of this cache which are tagged by the specified tag.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L282>`__.
      
      :param string $tag: The tag the entries must have
      
   .. php:method:: collectGarbage()
   
      Does garbage collection
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L319>`__.
      
      
   .. php:method:: requireOnce(string $entryIdentifier)
   
      Loads PHP code from the cache and require_onces it right away.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L364>`__.
      
      :param string $entryIdentifier: An identifier which describes the cache entry to load
      
   .. php:method:: require(string $entryIdentifier)
   
      Loads PHP code from the cache and require it right away.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L386>`__.
      
      :param string $entryIdentifier: An identifier which describes the cache entry to load
      
   .. php:method:: setCacheDirectory(string $cacheDirectory)
   
      Sets the directory where the cache files are stored. By default it is
      assumed that the directory is below TYPO3's Project Path. However, an
      absolute path can be selected, too.
      
      This method enables to use a cache path outside of TYPO3's Project Path. The final
      cache path is checked and created in createFinalCacheDirectory(),
      called by setCache() method, which is done _after_ the cacheDirectory
      option was handled.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L114>`__.
      
      :param string $cacheDirectory: The cache base directory. If a relative path
      
   .. php:method:: getCacheDirectory()
   
      Returns the directory where the cache files are stored
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L200>`__.
      
      
   .. php:method:: setDefaultLifetime(int $defaultLifetime)
   
      Sets the default lifetime for this cache backend
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L105>`__.
      
      :param int $defaultLifetime: Default lifetime of this cache backend in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime.
      
   .. php:method:: flushByTags()
   
      Backwards compatibility safeguard since re-introducing flushByTags as API.
      
      See https://review.typo3.org/#/c/50537/ comments for patch set 14.
      
      The method is here even though it is only required for TaggableBackendInterface.
      We add it here to ensure third party cache backends do not fail but instead
      delegate to a less efficient linear flushing behavior.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L123>`__.
      
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Cache/Backend/FileBackend.php#L21>`__.
