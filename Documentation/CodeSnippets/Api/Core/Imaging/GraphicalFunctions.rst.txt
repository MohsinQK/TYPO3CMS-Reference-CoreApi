.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Core\Imaging

.. php:class:: GraphicalFunctions

   Standard graphical functions
   
   Class contains a bunch of cool functions for manipulating graphics with GDlib/Freetype and ImageMagick.
   VERY OFTEN used with gifbuilder that extends this class and provides a TypoScript API to using these functions
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php>`__.

   .. php:attr:: addFrameSelection
   
      If set, the frame pointer is appended to the filenames.
      
      
   .. php:attr:: gifExtension
   
      This should be changed to 'png' if you want this class to read/make PNG-files instead!
      
      
   .. php:attr:: truecolorColors
   
      16777216 Colors is the maximum value for PNG, JPEG truecolor images (24-bit, 8-bit / Channel)
      
      
   .. php:attr:: cmds
   
      
   .. php:attr:: filenamePrefix
   
      Filename prefix for images scaled in imageMagickConvert()
      
      
   .. php:attr:: imageMagickConvert_forceFileNameBody
   
      Forcing the output filename of imageMagickConvert() to this value. However after calling imageMagickConvert() it will be set blank again.
      
      
   .. php:attr:: dontCheckForExistingTempFile
   
      This flag should always be FALSE. If set TRUE, imageMagickConvert will always write a new file to the tempdir! Used for debugging.
      
      
   .. php:attr:: dontCompress
   
      Prevents imageMagickConvert() from compressing the gif-files with self::gifCompress()
      
      
   .. php:attr:: alternativeOutputKey
   
      For debugging only.
      
      Filenames will not be based on mtime and only filename (not path) will be used.
      This key is also included in the hash of the filename...
      
      
   .. php:attr:: IM_commands
   
      All ImageMagick commands executed is stored in this array for tracking. Used by the Install Tools Image section
      
      
   .. php:attr:: workArea
   
      
   .. php:attr:: scalecmd
   
      ImageMagick scaling command; "-auto-orient -geometry" or "-auto-orient -sample". Used in makeText() and imageMagickConvert()
      
      
   .. php:attr:: map
   
      
   .. php:attr:: setup
   
      This holds the operational setup.
      
      Basically this is a TypoScript array with properties.
      
      
   .. php:attr:: w
   
      
   .. php:attr:: h
   
      
   .. php:method:: maskImageOntoImage(resource $im, array $conf, array $workArea)
   
      Implements the "IMAGE" GIFBUILDER object, when the "mask" property is TRUE.
      
      It reads the two images defined by $conf['file'] and $conf['mask'] and copies the $conf['file'] onto the input image pointer image using the $conf['mask'] as a grayscale mask
      The operation involves ImageMagick for combining.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L364>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      
   .. php:method:: copyImageOntoImage(resource $im, array $conf, array $workArea)
   
      Implements the "IMAGE" GIFBUILDER object, when the "mask" property is FALSE (using only $conf['file'])
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L449>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      
   .. php:method:: makeText(resource $im, array $conf, array $workArea)
   
      Implements the "TEXT" GIFBUILDER object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L579>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      
   .. php:method:: ImageTTFBBoxWrapper(int $fontSize, int $angle, string $fontFile, string $string, array $splitRendering, int $sF)
   
      Wrapper for ImageTTFBBox
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L941>`__.
      
      :param int $fontSize: (See argument for PHP function ImageTTFBBox())
      :param int $angle: (See argument for PHP function ImageTTFBBox())
      :param string $fontFile: (See argument for PHP function ImageTTFBBox())
      :param string $string: (See argument for PHP function ImageTTFBBox())
      :param array $splitRendering: Split-rendering configuration
      :param int $sF: Scale factor
      
   .. php:method:: ImageTTFTextWrapper(resource $im, int $fontSize, int $angle, int $x, int $y, int $color, string $fontFile, string $string, array $splitRendering, int $sF)
   
      Wrapper for ImageTTFText
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L983>`__.
      
      :param resource $im: (See argument for PHP function imageTTFtext())
      :param int $fontSize: (See argument for PHP function imageTTFtext())
      :param int $angle: (See argument for PHP function imageTTFtext())
      :param int $x: (See argument for PHP function imageTTFtext())
      :param int $y: (See argument for PHP function imageTTFtext())
      :param int $color: (See argument for PHP function imageTTFtext())
      :param string $fontFile: (See argument for PHP function imageTTFtext())
      :param string $string: (See argument for PHP function imageTTFtext()). UTF-8 string, possibly with entities in.
      :param array $splitRendering: Split-rendering configuration
      :param int $sF: Scale factor
      
   .. php:method:: splitString(string $string, array $splitRendering, int $fontSize, string $fontFile)
   
      Splitting a string for ImageTTFBBox up into an array where each part has its own configuration options.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1027>`__.
      
      :param string $string: UTF-8 string
      :param array $splitRendering: Split-rendering configuration from GIFBUILDER TEXT object.
      :param int $fontSize: Current fontsize
      :param string $fontFile: Current font file
      
   .. php:method:: makeOutline(resource $im, array $conf, array $workArea, array $txtConf)
   
      Implements the "OUTLINE" GIFBUILDER object / property for the TEXT object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1324>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      :param array $txtConf: TypoScript array with configuration for the associated TEXT GIFBUILDER object.
      
   .. php:method:: circleOffset(int $distance, int $iterations)
   
      Creates some offset values in an array used to simulate a circularly applied outline around TEXT
      
      access private
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1354>`__.
      
      :param int $distance: Distance
      :param int $iterations: Iterations.
      
   .. php:method:: makeEmboss(resource $im, array $conf, array $workArea, array $txtConf)
   
      Implements the "EMBOSS" GIFBUILDER object / property for the TEXT object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1383>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      :param array $txtConf: TypoScript array with configuration for the associated TEXT GIFBUILDER object.
      
   .. php:method:: makeShadow(resource $im, array $conf, array $workArea, array $txtConf)
   
      Implements the "SHADOW" GIFBUILDER object / property for the TEXT object
      The operation involves ImageMagick for combining.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1407>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      :param array $txtConf: TypoScript array with configuration for the associated TEXT GIFBUILDER object.
      
   .. php:method:: makeBox(resource $im, array $conf, array $workArea)
   
      Implements the "BOX" GIFBUILDER object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1505>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      
   .. php:method:: makeEllipse(resource $im, array $conf, array $workArea)
   
      Implements the "Ellipse" GIFBUILDER object
      Example Typoscript:
      file  =  GIFBUILDER
      file  {
      XY  =  200,200
      format  =  jpg
      quality  =  100
      10  =  ELLIPSE
      10.dimensions  =  100,100,50,50
      10.color  =  red
      
      $workArea = X,Y
      $conf['dimensions'] = offset x, offset y, width of ellipse, height of ellipse
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1544>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      :param array $workArea: The current working area coordinates.
      
   .. php:method:: makeEffect(resource $im, array $conf)
   
      Implements the "EFFECT" GIFBUILDER object
      The operation involves ImageMagick for applying effects
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1565>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      
   .. php:method:: adjust(resource $im, array $conf)
   
      Implements the "ADJUST" GIFBUILDER object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1661>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      
   .. php:method:: crop(resource $im, array $conf)
   
      Implements the "CROP" GIFBUILDER object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1696>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      
   .. php:method:: scale(resource $im, array $conf)
   
      Implements the "SCALE" GIFBUILDER object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1734>`__.
      
      :param resource $im: GDlib image pointer
      :param array $conf: TypoScript array with configuration for the GIFBUILDER object.
      
   .. php:method:: autolevels(resource $im)
   
      Apply auto-levels to input image pointer
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1787>`__.
      
      :param resource $im: GDlib Image Pointer
      
   .. php:method:: outputLevels(resource $im, int $low, int $high, bool $swap)
   
      Apply output levels to input image pointer (decreasing contrast)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1817>`__.
      
      :param resource $im: GDlib Image Pointer
      :param int $low: The "low" value (close to 0)
      :param int $high: The "high" value (close to 255)
      :param bool $swap: If swap, then low and high are swapped. (Useful for negated masks...)
      
   .. php:method:: inputLevels(resource $im, int $low, int $high)
   
      Apply input levels to input image pointer (increasing contrast)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1846>`__.
      
      :param resource $im: GDlib Image Pointer
      :param int $low: The "low" value (close to 0)
      :param int $high: The "high" value (close to 255)
      
   .. php:method:: IMreduceColors(string $file, int $cols)
   
      Reduce colors in image using IM and create a palette based image if possible (<=256 colors)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1870>`__.
      
      :param string $file: Image file to reduce
      :param int $cols: Number of colors to reduce the image to.
      
   .. php:method:: v5_sharpen(int $factor)
   
      Returns the IM command for sharpening with ImageMagick 5
      Uses $this->im5fx_sharpenSteps for translation of the factor to an actual command.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1905>`__.
      
      :param int $factor: The sharpening factor, 0-100 (effectively in 10 steps)
      
   .. php:method:: v5_blur(int $factor)
   
      Returns the IM command for blurring with ImageMagick 5.
      
      Uses $this->im5fx_blurSteps for translation of the factor to an actual command.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1926>`__.
      
      :param int $factor: The blurring factor, 0-100 (effectively in 10 steps)
      
   .. php:method:: randomName()
   
      Returns a random filename prefixed with "temp_" and then 32 char md5 hash (without extension).
      
      Used by functions in this class to create truly temporary files for the on-the-fly processing. These files will most likely be deleted right away.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1943>`__.
      
      
   .. php:method:: applyOffset(array $cords, array $OFFSET)
   
      Applies offset value to coordinated in $cords.
      
      Basically the value of key 0/1 of $OFFSET is added to keys 0/1 of $cords
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1957>`__.
      
      :param array $cords: Integer coordinates in key 0/1
      :param array $OFFSET: Offset values in key 0/1
      
   .. php:method:: convertColor(string $string)
   
      Converts a "HTML-color" TypoScript datatype to RGB-values.
      
      Default is 0,0,0
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L1971>`__.
      
      :param string $string: "HTML-color" data type string, eg. 'red', '#ffeedd' or '255,0,255'. You can also add a modifying operator afterwards. There are two options: "255,0,255 : 20" - will add 20 to values, result is "255,20,255". Or "255,0,255 : *1.23" which will multiply all RGB values with 1.23
      
   .. php:method:: imageMagickConvert(string $imagefile, string $newExt, string $w, string $h, string $params, string $frame, array $options, bool $mustCreate)
   
      Converts $imagefile to another file in temp-dir of type $newExt (extension).
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2086>`__.
      
      :param string $imagefile: The absolute image filepath
      :param string $newExt: New extension, eg. "gif", "png", "jpg", "tif". If $newExt is NOT set, the new imagefile will be of the original format. If newExt = 'WEB' then one of the web-formats is applied.
      :param string $w: Width. $w / $h is optional. If only one is given the image is scaled proportionally. If an 'm' exists in the $w or $h and if both are present the $w and $h is regarded as the Maximum w/h and the proportions will be kept
      :param string $h: Height. See $w
      :param string $params: Additional ImageMagick parameters.
      :param string $frame: Refers to which frame-number to select in the image. '' or 0 will select the first frame, 1 will select the next and so on...
      :param array $options: An array with options passed to getImageScale (see this function).
      :param bool $mustCreate: If set, then another image than the input imagefile MUST be returned. Otherwise you can risk that the input image is good enough regarding measures etc and is of course not rendered to a new, temporary file in typo3temp/. But this option will force it to.
      
   .. php:method:: getImageDimensions(string $imageFile)
   
      Gets the input image dimensions.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2195>`__.
      
      :param string $imageFile: The absolute image filepath
      
   .. php:method:: cacheImageDimensions(array $identifyResult)
   
      Caches the result of the getImageDimensions function into the database. Does not check if the file exists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2224>`__.
      
      :param array $identifyResult: Result of the getImageDimensions function
      
   .. php:method:: getCachedImageDimensions(string $filePath)
   
      Fetches the cached image dimensions from the cache. Does not check if the image file exists.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2249>`__.
      
      :param string $filePath: The absolute image file path
      
   .. php:method:: imageMagickIdentify(string $imagefile)
   
      Call the identify command
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2434>`__.
      
      :param string $imagefile: The relative to public web path image filepath
      
   .. php:method:: imageMagickExec(string $input, string $output, string $params, int $frame)
   
      Executes an ImageMagick "convert" on two filenames, $input and $output using $params before them.
      
      Can be used for many things, mostly scaling and effects.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2480>`__.
      
      :param string $input: The relative to public web path image filepath, input file (read from)
      :param string $output: The relative to public web path image filepath, output filename (written to)
      :param string $params: ImageMagick parameters
      :param int $frame: Optional, refers to which frame-number to select in the image. '' or 0
      
   .. php:method:: combineExec(string $input, string $overlay, string $mask, string $output)
   
      Executes an ImageMagick "combine" (or composite in newer times) on four filenames - $input, $overlay and $mask as input files and $output as the output filename (written to)
      Can be used for many things, mostly scaling and effects.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2511>`__.
      
      :param string $input: The relative to public web path image filepath, bottom file
      :param string $overlay: The relative to public web path image filepath, overlay file (top)
      :param string $mask: The relative to public web path image filepath, the mask file (grayscale)
      :param string $output: The relative to public web path image filepath, output filename (written to)
      
   .. php:method:: gifCompress(string $theFile, string $type)
   
      Compressing a GIF file if not already compressed.
      
      This function is a workaround for the fact that ImageMagick and/or GD does not compress GIF-files to their minimum size (that is RLE or no compression used)
      
      The function takes a file-reference, $theFile, and saves it again through GD or ImageMagick in order to compress the file
      GIF:
      If $type is not set, the compression is done with ImageMagick
      If $type is set to either 'IM' or 'GD' the compression is done with ImageMagick and GD respectively
      PNG:
      No changes.
      
      $theFile is expected to be a valid GIF-file!
      The function returns a code for the operation.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2556>`__.
      
      :param string $theFile: Filepath
      :param string $type: See description of function
      
   .. php:method:: readPngGif(string $theFile, bool $output_png)
   
      Returns filename of the png/gif version of the input file (which can be png or gif).
      
      If input file type does not match the wanted output type a conversion is made and temp-filename returned.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2603>`__.
      
      :param string $theFile: Filepath of image file
      :param bool $output_png: If TRUE, then input file is converted to PNG, otherwise to GIF
      
   .. php:method:: applyImageMagickToPHPGif(resource $im, string $command)
   
      Applies an ImageMagick parameter to a GDlib image pointer resource by writing the resource to file, performing an IM operation upon it and reading back the result into the ImagePointer.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2644>`__.
      
      :param resource $im: The image pointer (reference)
      :param string $command: The ImageMagick parameters. Like effects, scaling etc.
      
   .. php:method:: gif_or_jpg(string $type, int $w, int $h)
   
      Returns an image extension for an output image based on the number of pixels of the output and the file extension of the original file.
      
      For example: If the number of pixels exceeds $this->pixelLimitGif (normally 10000) then it will be a "jpg" string in return.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2669>`__.
      
      :param string $type: The file extension, lowercase.
      :param int $w: The width of the output image.
      :param int $h: The height of the output image.
      
   .. php:method:: output(string $file)
   
      Writing the internal image pointer, $this->im, to file based on the extension of the input filename
      Used in GIFBUILDER
      Uses $this->setup['reduceColors'] for gif/png images and $this->setup['quality'] for jpg images to reduce size/quality if needed.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2686>`__.
      
      :param string $file: The absolute filename to write to
      
   .. php:method:: destroy()
   
      Destroy internal image pointer, $this->im
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2728>`__.
      
      
   .. php:method:: imgTag(array $imgInfo)
   
      Returns Image Tag for input image information array.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2739>`__.
      
      :param array $imgInfo: Image information array, key 0/1 is width/height and key 3 is the src value
      
   .. php:method:: ImageWrite(resource $destImg, string $theImage, int $quality)
   
      Writes the input GDlib image pointer to file
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2755>`__.
      
      :param resource $destImg: The GDlib image resource pointer
      :param string $theImage: The absolute file path to write to
      :param int $quality: The image quality (for JPEGs)
      
   .. php:method:: imageCreateFromFile(string $sourceImg)
   
      Creates a new GDlib image resource based on the input image filename.
      
      If it fails creating an image from the input file a blank gray image with the dimensions of the input image will be created instead.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2795>`__.
      
      :param string $sourceImg: Image filename
      
   .. php:method:: hexColor(array $color)
   
      Returns the HEX color value for an RGB color array
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2835>`__.
      
      :param array $color: RGB color array
      
   .. php:method:: unifyColors(resource $img, array $colArr)
   
      Unifies all colors given in the colArr color array to the first color in the array.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2860>`__.
      
      :param resource $img: Image resource
      :param array $colArr: Array containing RGB color arrays
      
   .. php:method:: getTemporaryImageWithText(string $filename, string $textline1, string $textline2, string $textline3)
   
      Creates error image based on gfx/notfound_thumb.png
      Requires GD lib enabled, otherwise it will exit with the three
      textstrings outputted as text. Outputs the image stream to browser and exits!
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/core/Classes/Imaging/GraphicalFunctions.php#L2916>`__.
      
      :param string $filename: Name of the file
      :param string $textline1: Text line 1
      :param string $textline2: Text line 2
      :param string $textline3: Text line 3
