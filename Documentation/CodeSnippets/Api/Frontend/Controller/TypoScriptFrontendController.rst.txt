.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Frontend\Controller

.. php:class:: TypoScriptFrontendController

   Class for the built TypoScript based frontend. Instantiated in
   \TYPO3\CMS\Frontend\Http\RequestHandler as the global object TSFE.
   
   Main frontend class, instantiated in \TYPO3\CMS\Frontend\Http\RequestHandler
   as the global object TSFE.
   
   This class has a lot of functions and internal variable which are used from
   \TYPO3\CMS\Frontend\Http\RequestHandler
   
   The class is instantiated as $GLOBALS['TSFE'] in \TYPO3\CMS\Frontend\Http\RequestHandler.
   
   The use of this class should be inspired by the order of function calls as
   found in \TYPO3\CMS\Frontend\Http\RequestHandler.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php>`__.

   .. php:attr:: id
   
      The page id (int)
      
      
   .. php:attr:: type
   
      The type (read-only)
      
      
   .. php:attr:: no_cache
   
      Page will not be cached. Write only TRUE. Never clear value (some other
      code might have reasons to set it TRUE).
      
      
   .. php:attr:: rootLine
   
      The rootLine (all the way to tree root, not only the current site!)
      
      
   .. php:attr:: page
   
      The pagerecord
      
      
   .. php:attr:: contentPid
   
      This will normally point to the same value as id, but can be changed to
      point to another page from which content will then be displayed instead.
      
      
   .. php:attr:: sys_page
   
      sys_page-object, pagefunctions
      
      
   .. php:attr:: MP
   
      
   .. php:attr:: fe_user
   
      The frontend user
      
      
   .. php:attr:: config
   
      "CONFIG" object from TypoScript. Array generated based on the TypoScript
      configuration of the current page. Saved with the cached pages.
      
      
   .. php:attr:: tmpl
   
      The TypoScript template object. Used to parse the TypoScript template
      
      
   .. php:attr:: all
   
      Used by template fetching system. This array is an identification of
      the template. If $this->all is empty it's because the template-data is not
      cached, which it must be.
      
      
   .. php:attr:: sPre
   
      Toplevel - objArrayName, eg 'page'
      
      
   .. php:attr:: pSetup
   
      TypoScript configuration of the page-object pointed to by sPre.
      
      $this->tmpl->setup[$this->sPre.'.']
      
      
   .. php:attr:: newHash
   
      This hash is unique to the template, the $this->id and $this->type vars and
      the list of groups. Used to get and later store the cached data
      
      
   .. php:attr:: additionalHeaderData
   
      Eg. insert JS-functions in this array ($additionalHeaderData) to include them
      once. Use associative keys.
      
      Keys in use:
      
      used to accumulate additional HTML-code for the header-section,
      <head>...</head>. Insert either associative keys (like
      additionalHeaderData['myStyleSheet'], see reserved keys above) or num-keys
      (like additionalHeaderData[] = '...')
      
      
   .. php:attr:: additionalFooterData
   
      Used to accumulate additional HTML-code for the footer-section of the template
      
      
   .. php:attr:: absRefPrefix
   
      Absolute Reference prefix
      
      
   .. php:attr:: linkVars
   
      A string prepared for insertion in all links on the page as url-parameters.
      
      Based on configuration in TypoScript where you defined which GET parameters you
      would like to pass on.
      
      
   .. php:attr:: applicationData
   
      'Global' Storage for various applications. Keys should be 'tx_'.extKey for
      extensions.
      
      
   .. php:attr:: register
   
      
   .. php:attr:: registerStack
   
      Stack used for storing array and retrieving register arrays (see
      LOAD_REGISTER and RESTORE_REGISTER)
      
      
   .. php:attr:: recordRegister
   
      Used by RecordContentObject and ContentContentObject to ensure the a records is NOT
      rendered twice through it!
      
      
   .. php:attr:: currentRecord
   
      This is set to the [table]:[uid] of the latest record rendered. Note that
      class ContentObjectRenderer has an equal value, but that is pointing to the
      record delivered in the $data-array of the ContentObjectRenderer instance, if
      the cObjects CONTENT or RECORD created that instance
      
      
   .. php:attr:: cObj
   
      Page content render object
      
      
   .. php:attr:: content
   
      All page content is accumulated in this variable. See RequestHandler
      
      
   .. php:attr:: lastImgResourceInfo
   
      Info-array of the last resulting image resource of content object
      IMG_RESOURCE (if any), containing width, height and so on.
      
      
   .. php:attr:: xhtmlDoctype
   
      Doctype to use
      
      
   .. php:attr:: xhtmlVersion
   
      
   .. php:method:: initUserGroups()
   
      Initializes the front-end user groups.
      
      Sets frontend.user aspect based on front-end user status.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L537>`__.
      
      
   .. php:method:: isUserOrGroupSet()
   
      Checking if a user is logged in or a group constellation different from "0,-1"
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L549>`__.
      
      
   .. php:method:: isBackendUserLoggedIn()
   
      Checks if a backend user is logged in
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L563>`__.
      
      
   .. php:method:: determineId(Psr\\Http\\Message\\ServerRequestInterface request)
   
      Resolves the page id and sets up several related properties.
      
      At this point, the Context object already contains relevant preview
      settings (if a backend user is logged in etc).
      
      If $this->id is not set at all, the method does its best to set the
      value to an integer. Resolving is based on this options:
      
      - Finding the domain record start page
      - First visible page
      - Relocating the id below the site if outside the site / domain
      
      The following properties may be set up or updated:
      
      - id
      - sys_page
      - sys_page->where_groupAccess
      - sys_page->where_hid_del
      - register['SYS_LASTCHANGED']
      - pageNotFound
      
      Via getPageAndRootline()
      
      - rootLine
      - page
      - MP
      - originalShortcutPage
      - originalMountPointPage
      - pageAccessFailureHistory['direct_access']
      - pageNotFound
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L601>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      :returntype: Psr\\Http\\Message\\ResponseInterface
      
   .. php:method:: checkEnableFields(array $row, bool $bypassGroupCheck)
   
      Checks page record for enableFields
      Returns TRUE if enableFields does not disable the page record.
      
      Takes notice of the includeHiddenPages visibility aspect flag and uses SIM_ACCESS_TIME for start/endtime evaluation
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L982>`__.
      
      :param array $row: The page record to evaluate (needs fields: hidden, starttime, endtime, fe_group)
      :param bool $bypassGroupCheck: Bypass group-check
      
   .. php:method:: getPageAccessFailureReasons(string|null $failureReasonCode)
   
      Analysing $this->pageAccessFailureHistory into a summary array telling which features disabled display and on which pages and conditions. That data can be used inside a page-not-found handler
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L997>`__.
      
      :param string|null $failureReasonCode: the error code to be attached (optional), see PageAccessFailureReasons list for details
      
   .. php:method:: getFromCache()
   
      See if page is in cache and get it if so, populates the page content to $this->content.
      
      Also fetches the raw cached pagesection information (TypoScript information) before.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1075>`__.
      
      
   .. php:method:: getFromCache_queryRow()
   
      Returning the cached version of page with hash = newHash
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1161>`__.
      
      
   .. php:method:: getConfigArray()
   
      Checks if config-array exists already but if not, gets it
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1314>`__.
      
      
   .. php:method:: calculateLinkVars(array $queryParams)
   
      Calculates and sets the internal linkVars based upon the current request parameters
      and the setting "config.linkVars".
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1534>`__.
      
      :param array $queryParams: $_GET (usually called with a PSR-7 $request->getQueryParams())
      
   .. php:method:: isGeneratePage()
   
      Returns TRUE if the page content should be generated.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1627>`__.
      
      :returntype: bool
      
   .. php:method:: clearPageCacheContent()
   
      Clears cache content (for $this->newHash)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1669>`__.
      
      
   .. php:method:: addCacheTags(array $tags)
   
      Adds tags to this page's cache entry, you can then f.e. remove cache
      entries by tag
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1740>`__.
      
      :param array $tags: An array of tag
      
   .. php:method:: getPageCacheTags()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1748>`__.
      
      :returntype: array
      
   .. php:method:: generatePage_preProcessing()
   
      Does some processing BEFORE the page content is generated / built.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1761>`__.
      
      
   .. php:method:: preparePageContentGeneration(Psr\\Http\\Message\\ServerRequestInterface request)
   
      Sets up TypoScript "config." options and set properties in $TSFE.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1797>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      
   .. php:method:: generatePage_postProcessing(Psr\\Http\\Message\\ServerRequestInterface request)
   
      Does processing of the content after the page content was generated.
      
      This includes caching the page, indexing the page (if configured) and setting sysLastChanged
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1858>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      
   .. php:method:: generatePageTitle()
   
      Generate the page title, can be called multiple times,
      as PageTitleProvider might have been modified by an uncached plugin etc.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1891>`__.
      
      :returntype: string
      :returns: the generated page title
      
   .. php:method:: INTincScript(Psr\\Http\\Message\\ServerRequestInterface request)
   
      Processes the INTinclude-scripts
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L1973>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      
   .. php:method:: isINTincScript()
   
      Determines if there are any INTincScripts to include = "non-cacheable" parts
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2110>`__.
      
      
   .. php:method:: applyHttpHeadersToResponse()
   
      Add HTTP headers to the response object.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2121>`__.
      
      :returntype: Psr\\Http\\Message\\ResponseInterface
      
   .. php:method:: isStaticCacheble()
   
      Reporting status whether we can send cache control headers for proxy caching or publishing to static files
      
      Rules are:
      no_cache cannot be set: If it is, the page might contain dynamic content and should never be cached.
      There can be no USER_INT objects on the page ("isINTincScript()") because they implicitly indicate dynamic content
      There can be no logged in user because user sessions are based on a cookie and thereby does not offer client caching a chance to know if the user is logged in. Actually, there will be a reverse problem here; If a page will somehow change when a user is logged in he may not see it correctly if the non-login version sent a cache-header! So do NOT use cache headers in page sections where user logins change the page content. (unless using such as realurl to apply a prefix in case of login sections)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2217>`__.
      
      
   .. php:method:: newCObj()
   
      Creates an instance of ContentObjectRenderer in $this->cObj
      This instance is used to start the rendering of the TypoScript template structure
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2233>`__.
      
      
   .. php:method:: logDeprecatedTyposcript(string $typoScriptProperty, string $explanation)
   
      Logs access to deprecated TypoScript objects and properties.
      
      Dumps message to the TypoScript message log (admin panel) and the TYPO3 deprecation log.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2303>`__.
      
      :param string $typoScriptProperty: Deprecated object or property
      :param string $explanation: Message or additional information
      
   .. php:method:: doWorkspacePreview()
   
      Returns TRUE if workspace preview is enabled
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2320>`__.
      
      
   .. php:method:: whichWorkspace()
   
      Returns the uid of the current workspace
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2332>`__.
      
      :returntype: int
      :returns: returns workspace integer for which workspace is being preview. 0 if none (= live workspace).
      
   .. php:method:: getPagesTSconfig()
   
      Returns the pages TSconfig array based on the current ->rootLine
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2349>`__.
      
      :returntype: array
      
   .. php:method:: uniqueHash(string $str)
   
      Returns a unique md5 hash.
      
      There is no special magic in this, the only point is that you don't have to call md5(uniqid()) which is slow and by this you are sure to get a unique string each time in a little faster way.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2370>`__.
      
      :param string $str: Some string to include in what is hashed. Not significant at all.
      
   .. php:method:: set_no_cache(string $reason, bool $internal)
   
      Sets the cache-flag to 1. Could be called from user-included php-files in order to ensure that a page is not cached.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2381>`__.
      
      :param string $reason: An optional reason to be written to the log.
      :param bool $internal: Whether the call is done from core itself (should only be used by core).
      
   .. php:method:: set_cache_timeout_default(int $seconds)
   
      Sets the cache-timeout in seconds
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2430>`__.
      
      :param int $seconds: Cache-timeout in seconds
      
   .. php:method:: get_cache_timeout()
   
      Get the cache timeout for the current page.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2441>`__.
      
      :returntype: int
      
   .. php:method:: sL(string $input)
   
      Split Label function for front-end applications.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2464>`__.
      
      :param string $input: Key string. Accepts the "LLL:" prefix.
      
   .. php:method:: getRequestedId()
   
      Returns the originally requested page uid when TSFE was instantiated initially.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2483>`__.
      
      :returntype: int
      
   .. php:method:: getLanguage()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2646>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Site\\Entity\\SiteLanguage
      
   .. php:method:: getSite()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2651>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Site\\Entity\\Site
      
   .. php:method:: getContext()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2656>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Context\\Context
      
   .. php:method:: getPageArguments()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L2661>`__.
      
      :returntype: TYPO3\\CMS\\Core\\Routing\\PageArguments
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L21>`__.
      
      
   .. php:method:: __isset()
   
      Checks if the property of the given name is set.
      
      Unmarked protected properties must return false as usual.
      Marked properties are evaluated by isset().
      
      This method is not called for public properties.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L79>`__.
      
      
   .. php:method:: __get()
   
      Gets the value of the property of the given name if tagged.
      
      The evaluation is done in the assumption that this method is never
      reached for a public property.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L98>`__.
      
      
   .. php:method:: __set()
   
      Sets the property of the given name if tagged.
      
      Additionally it's allowed to set unknown properties.
      
      The evaluation is done in the assumption that this method is never
      reached for a public property.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L118>`__.
      
      
   .. php:method:: __unset()
   
      Unsets the property of the given name if tagged.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Controller/TypoScriptFrontendController.php#L133>`__.
