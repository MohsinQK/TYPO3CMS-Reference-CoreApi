.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Frontend\Plugin

.. php:class:: AbstractPlugin

   Base class for frontend plugins
   Most legacy frontend plugins are extension classes of this one.
   
   This class contains functions which assists these plugins in creating lists, searching, displaying menus, page-browsing (next/previous/1/2/3) and handling links.
   Functions are all prefixed "pi_" which is reserved for this class. Those functions can of course be overridden in the extension classes (that is the point...)
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php>`__.

   .. php:attr:: prefixId
   
      Should be same as classname of the plugin, used for CSS classes, variables
      
      
   .. php:attr:: scriptRelPath
   
      Path to the plugin class script relative to extension directory, eg. 'pi1/class.tx_newfaq_pi1.php'
      
      
   .. php:attr:: extKey
   
      Extension key.
      
      
   .. php:attr:: piVars
   
      This is the incoming array by name $this->prefixId merged between POST and GET, POST taking precedence.
      
      Eg. if the class name is 'tx_myext'
      then the content of this array will be whatever comes into &tx_myext[...]=...
      
      
   .. php:attr:: internal
   
      Local pointer variable array.
      
      Holds pointer information for the MVC like approach Kasper
      initially proposed.
      
      
   .. php:attr:: LOCAL_LANG
   
      Local Language content
      
      
   .. php:attr:: LOCAL_LANG_loaded
   
      Flag that tells if the locallang file has been fetch (or tried to
      be fetched) already.
      
      
   .. php:attr:: LLkey
   
      Pointer to the language to use.
      
      
   .. php:attr:: altLLkey
   
      Pointer to alternative fall-back language to use.
      
      
   .. php:attr:: LLtestPrefix
   
      You can set this during development to some value that makes it
      easy for you to spot all labels that ARe delivered by the getLL function.
      
      
   .. php:attr:: LLtestPrefixAlt
   
      Save as LLtestPrefix, but additional prefix for the alternative value
      in getLL() function calls
      
      
   .. php:attr:: pi_isOnlyFields
   
      
   .. php:attr:: pi_alwaysPrev
   
      
   .. php:attr:: pi_lowerThan
   
      
   .. php:attr:: pi_moreParams
   
      
   .. php:attr:: pi_listFields
   
      
   .. php:attr:: pi_autoCacheFields
   
      
   .. php:attr:: pi_autoCacheEn
   
      
   .. php:attr:: conf
   
      Should normally be set in the main function with the TypoScript content passed to the method.
      
      $conf[LOCAL_LANG][_key_] is reserved for Local Language overrides.
      $conf[userFunc] reserved for setting up the USER / USER_INT object. See TSref
      
      
   .. php:attr:: pi_tmpPageId
   
      
   .. php:method:: setContentObjectRenderer()
   
      This setter is called when the plugin is called from UserContentObject (USER)
      via ContentObjectRenderer->callUserFunction().
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L245>`__.
      
      
   .. php:method:: pi_setPiVarDefaults()
   
      If internal TypoScript property "_DEFAULT_PI_VARS." is set then it will merge the current $this->piVars array onto these default values.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L288>`__.
      
      
   .. php:method:: pi_getPageLink(int $id, string $target, array|string $urlParameters)
   
      Get URL to some page.
      
      Returns the URL to page $id with $target and an array of additional url-parameters, $urlParameters
      Simple example: $this->pi_getPageLink(123) to get the URL for page-id 123.
      
      The function basically calls $this->cObj->getTypoLink_URL()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L339>`__.
      
      :param int $id: Page id
      :param string $target: Target value to use. Affects the &type-value of the URL, defaults to current.
      :param array|string $urlParameters: As an array key/value pairs represent URL parameters to set. Values NOT URL-encoded yet, keys should be URL-encoded if needed. As a string the parameter is expected to be URL-encoded already.
      
   .. php:method:: pi_linkToPage(string $str, int $id, string $target, array|string $urlParameters)
   
      Link a string to some page.
      
      Like pi_getPageLink() but takes a string as first parameter which will in turn be wrapped with the URL including target attribute
      Simple example: $this->pi_linkToPage('My link', 123) to get something like <a href="index.php?id=123&type=1">My link</a>
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L372>`__.
      
      :param string $str: The content string to wrap in <a> tags
      :param int $id: Page id
      :param string $target: Target value to use. Affects the &type-value of the URL, defaults to current.
      :param array|string $urlParameters: As an array key/value pairs represent URL parameters to set. Values NOT URL-encoded yet, keys should be URL-encoded if needed. As a string the parameter is expected to be URL-encoded already.
      
   .. php:method:: pi_linkTP(string $str, array $urlParameters, bool $cache, int $altPageId)
   
      Link string to the current page.
      
      Returns the $str wrapped in <a>-tags with a link to the CURRENT page, but with $urlParameters set as extra parameters for the page.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L404>`__.
      
      :param string $str: The content string to wrap in <a> tags
      :param array $urlParameters: Array with URL parameters as key/value pairs. They will be "imploded" and added to the list of parameters defined in the plugins TypoScript property "parent.addParams" plus $this->pi_moreParams.
      :param bool $cache: If $cache is set (0/1), the page is asked to be cached by a &cHash value (unless the current plugin using this class is a USER_INT). Otherwise the no_cache-parameter will be a part of the link.
      :param int $altPageId: Alternative page ID for the link. (By default this function links to the SAME page!)
      
   .. php:method:: pi_linkTP_keepPIvars(string $str, array $overrulePIvars, bool $cache, bool $clearAnyway, int $altPageId)
   
      Link a string to the current page while keeping currently set values in piVars.
      
      Like pi_linkTP, but $urlParameters is by default set to $this->piVars with $overrulePIvars overlaid.
      This means any current entries from this->piVars are passed on (except the key "DATA" which will be unset before!) and entries in $overrulePIvars will OVERRULE the current in the link.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L428>`__.
      
      :param string $str: The content string to wrap in <a> tags
      :param array $overrulePIvars: Array of values to override in the current piVars. Contrary to pi_linkTP the keys in this array must correspond to the real piVars array and therefore NOT be prefixed with the $this->prefixId string. Further, if a value is a blank string it means the piVar key will not be a part of the link (unset)
      :param bool $cache: If $cache is set, the page is asked to be cached by a &cHash value (unless the current plugin using this class is a USER_INT). Otherwise the no_cache-parameter will be a part of the link.
      :param bool $clearAnyway: If set, then the current values of piVars will NOT be preserved anyways... Practical if you want an easy way to set piVars without having to worry about the prefix, "tx_xxxxx[]
      :param int $altPageId: Alternative page ID for the link. (By default this function links to the SAME page!)
      
   .. php:method:: pi_linkTP_keepPIvars_url(array $overrulePIvars, bool $cache, bool $clearAnyway, int $altPageId)
   
      Get URL to the current page while keeping currently set values in piVars.
      
      Same as pi_linkTP_keepPIvars but returns only the URL from the link.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L453>`__.
      
      :param array $overrulePIvars: See pi_linkTP_keepPIvars
      :param bool $cache: See pi_linkTP_keepPIvars
      :param bool $clearAnyway: See pi_linkTP_keepPIvars
      :param int $altPageId: See pi_linkTP_keepPIvars
      
   .. php:method:: pi_list_linkSingle(string $str, int $uid, bool $cache, array $mergeArr, bool $urlOnly, int $altPageId)
   
      Wraps the $str in a link to a single display of the record (using piVars[showUid])
      Uses pi_linkTP for the linking
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L473>`__.
      
      :param string $str: The content string to wrap in <a> tags
      :param int $uid: UID of the record for which to display details (basically this will become the value of [showUid]
      :param bool $cache: See pi_linkTP_keepPIvars
      :param array $mergeArr: Array of values to override in the current piVars. Same as $overrulePIvars in pi_linkTP_keepPIvars
      :param bool $urlOnly: If TRUE, only the URL is returned, not a full link
      :param int $altPageId: Alternative page ID for the link. (By default this function links to the SAME page!)
      
   .. php:method:: pi_openAtagHrefInJSwindow(string $str, string $winName, string $winParams)
   
      Will change the href value from <a> in the input string and turn it into markup that will open a new window with the URL
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L501>`__.
      
      :param string $str: The string to process. This should be a string already wrapped/including a <a> tag, only the `href` attribute will be used
      :param string $winName: Window name for the pop-up window
      :param string $winParams: Window parameters, see the default list for inspiration
      
   .. php:method:: pi_list_browseresults(int $showResultCount, string $tableParams, array $wrapArr, string $pointerName, bool $hscText, bool $forceOutput)
   
      Returns a results browser. This means a bar of page numbers plus a "previous" and "next" link. For each entry in the bar the piVars "pointer" will be pointing to the "result page" to show.
      
      Using $this->piVars['pointer'] as pointer to the page to display. Can be overwritten with another string ($pointerName) to make it possible to have more than one pagebrowser on a page)
      Using $this->internal['res_count'], $this->internal['results_at_a_time'] and $this->internal['maxPages'] for count number, how many results to show and the max number of pages to include in the browse bar.
      Using $this->internal['dontLinkActivePage'] as switch if the active (current) page should be displayed as pure text or as a link to itself
      Using $this->internal['showFirstLast'] as switch if the two links named "<< First" and "LAST >>" will be shown and point to the first or last page.
      Using $this->internal['pagefloat']: this defines were the current page is shown in the list of pages in the Pagebrowser. If this var is an integer it will be interpreted as position in the list of pages. If its value is the keyword "center" the current page will be shown in the middle of the pagelist.
      Using $this->internal['showRange']: this var switches the display of the pagelinks from pagenumbers to ranges f.e.: 1-5 6-10 11-15... instead of 1 2 3...
      Using $this->pi_isOnlyFields: this holds a comma-separated list of fieldnames which - if they are among the GETvars - will not disable caching for the page with pagebrowser.
      
      The third parameter is an array with several wraps for the parts of the pagebrowser. The following elements will be recognized:
      disabledLinkWrap, inactiveLinkWrap, activeLinkWrap, browseLinksWrap, showResultsWrap, showResultsNumbersWrap, browseBoxWrap.
      
      If $wrapArr['showResultsNumbersWrap'] is set, the formatting string is expected to hold template markers (###FROM###, ###TO###, ###OUT_OF###, ###FROM_TO###, ###CURRENT_PAGE###, ###TOTAL_PAGES###)
      otherwise the formatting string is expected to hold sprintf-markers (%s) for from, to, outof (in that sequence)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L554>`__.
      
      :param int $showResultCount: Determines how the results of the page browser will be shown. See description below
      :param string $tableParams: Attributes for the table tag which is wrapped around the table cells containing the browse links
      :param array $wrapArr: Array with elements to overwrite the default $wrapper-array.
      :param string $pointerName: varname for the pointer.
      :param bool $hscText: Enable htmlspecialchars() on language labels
      :param bool $forceOutput: Forces the output of the page browser if you set this option to "TRUE" (otherwise it's only drawn if enough entries are available)
      
   .. php:method:: pi_list_modeSelector(array $items, string $tableParams)
   
      Returns a mode selector; a little menu in a table normally put in the top of the page/list.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L729>`__.
      
      :param array $items: Key/Value pairs for the menu; keys are the piVars[mode] values and the "values" are the labels for them.
      :param string $tableParams: Attributes for the table tag which is wrapped around the table cells containing the menu
      
   .. php:method:: pi_list_makelist(\Result $statement, string $tableParams)
   
      Returns the list of items based on the input SQL result pointer
      For each result row the internal var, $this->internal['currentRow'], is set with the row returned.
      
      $this->pi_list_header() makes the header row for the list
      $this->pi_list_row() is used for rendering each row
      Notice that these two functions are typically ALWAYS defined in the extension class of the plugin since they are directly concerned with the specific layout for that plugins purpose.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L764>`__.
      
      :param \Result $statement: Result pointer to a SQL result which can be traversed.
      :param string $tableParams: Attributes for the table tag which is wrapped around the table rows containing the list
      
   .. php:method:: pi_list_row(int $c)
   
      Returns a list row. Get data from $this->internal['currentRow'];
      (Dummy)
      Notice: This function should ALWAYS be defined in the extension class of the plugin since it is directly concerned with the specific layout of the listing for your plugins purpose.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L797>`__.
      
      :param int $c: Row counting. Starts at 0 (zero). Used for alternating class values in the output rows.
      
   .. php:method:: pi_list_header()
   
      Returns a list header row.
      
      (Dummy)
      Notice: This function should ALWAYS be defined in the extension class of the plugin since it is directly concerned with the specific layout of the listing for your plugins purpose.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L810>`__.
      
      
   .. php:method:: pi_getClassName(string $class)
   
      Returns a class-name prefixed with $this->prefixId and with all underscores substituted to dashes (-)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L826>`__.
      
      :param string $class: The class name (or the END of it since it will be prefixed by $this->prefixId.'-')
      
   .. php:method:: pi_classParam(string $class, string $addClasses)
   
      Returns the class-attribute with the correctly prefixed classname
      Using pi_getClassName()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L840>`__.
      
      :param string $class: The class name(s) (suffix) - separate multiple classes with commas
      :param string $addClasses: Additional class names which should not be prefixed - separate multiple classes with commas
      
   .. php:method:: pi_wrapInBaseClass(string $str)
   
      Wraps the input string in a <div> tag with the class attribute set to the prefixId.
      
      All content returned from your plugins should be returned through this function so all content from your plugin is encapsulated in a <div>-tag nicely identifying the content of your plugin.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L861>`__.
      
      :param string $str: HTML content to wrap in the div-tags with the "main class" of the plugin
      
   .. php:method:: pi_getLL(string $key, string $alternativeLabel)
   
      Returns the localized label of the LOCAL_LANG key, $key
      Notice that for debugging purposes prefixes for the output values can be set with the internal vars ->LLtestPrefixAlt and ->LLtestPrefix
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L897>`__.
      
      :param string $key: The key from the LOCAL_LANG array for which to return the value.
      :param string $alternativeLabel: Alternative string to return IF no value is found set for the key, neither for the local language nor the default.
      
   .. php:method:: pi_loadLL(string $languageFilePath)
   
      Loads local-language values from the file passed as a parameter or
      by looking for a "locallang" file in the
      plugin class directory ($this->scriptRelPath).
      
      Also locallang values set in the TypoScript property "_LOCAL_LANG" are
      merged onto the values found in the "locallang" file.
      Supported file extensions xlf
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L941>`__.
      
      :param string $languageFilePath: path to the plugin language file in format EXT:....
      
   .. php:method:: pi_exec_query(string $table, bool $count, string $addWhere, mixed $mm_cat, string $groupBy, string $orderBy, string $query)
   
      Executes a standard SELECT query for listing of records based on standard input vars from the 'browser' ($this->internal['results_at_a_time'] and $this->piVars['pointer']) and 'searchbox' ($this->piVars['sword'] and $this->internal['searchFieldList'])
      Set $count to 1 if you wish to get a count(*) query for selecting the number of results.
      
      Notice that the query will use $this->conf['pidList'] and $this->conf['recursive'] to generate a PID list within which to search for records.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1003>`__.
      
      :param string $table: The table name to make the query for.
      :param bool $count: If set, you will get a "count(*)" query back instead of field selecting
      :param string $addWhere: Additional WHERE clauses (should be starting with " AND ....")
      :param mixed $mm_cat: If an array, then it must contain the keys "table", "mmtable" and (optionally) "catUidList" defining a table to make a MM-relation to in the query (based on fields uid_local and uid_foreign). If not array, the query will be a plain query looking up data in only one table.
      :param string $groupBy: If set, this is added as a " GROUP BY ...." part of the query.
      :param string $orderBy: If set, this is added as a " ORDER BY ...." part of the query. The default is that an ORDER BY clause is made based on $this->internal['orderBy'] and $this->internal['descFlag'] where the orderBy field must be found in $this->internal['orderByList']
      :param string $query: If set, this is taken as the first part of the query instead of what is created internally. Basically this should be a query starting with "FROM [table] WHERE ... AND ...". The $addWhere clauses and all the other stuff is still added. Only the tables and PID selecting clauses are bypassed. May be deprecated in the future!
      
   .. php:method:: pi_getRecord(string $table, int $uid, bool $checkPage)
   
      Returns the row $uid from $table
      (Simply calling $this->frontendEngine->sys_page->checkRecord())
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1120>`__.
      
      :param string $table: The table name
      :param int $uid: The uid of the record from the table
      :param bool $checkPage: If $checkPage is set, it's required that the page on which the record resides is accessible
      
   .. php:method:: pi_getPidList(string $pid_list, int $recursive)
   
      Returns a commalist of page ids for a query (eg. 'WHERE pid IN (...)')
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1132>`__.
      
      :param string $pid_list: A comma list of page ids (if empty current page is used)
      :param int $recursive: An integer >=0 telling how deep to dig for pids under each entry in $pid_list
      
   .. php:method:: pi_prependFieldsWithTable(string $table, string $fieldList)
   
      Having a comma list of fields ($fieldList) this is prepended with the $table.'.' name
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1150>`__.
      
      :param string $table: Table name to prepend
      :param string $fieldList: List of fields where each element will be prepended with the table name given.
      
   .. php:method:: pi_getCategoryTableContents(string $table, int $pid, string $whereClause, string $groupBy, string $orderBy, string $limit)
   
      Will select all records from the "category table", $table, and return them in an array.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1171>`__.
      
      :param string $table: The name of the category table to select from.
      :param int $pid: The page from where to select the category records.
      :param string $whereClause: Optional additional WHERE clauses put in the end of the query. DO NOT PUT IN GROUP BY, ORDER BY or LIMIT!
      :param string $groupBy: Optional GROUP BY field(s), if none, supply blank string.
      :param string $orderBy: Optional ORDER BY field(s), if none, supply blank string.
      :param string $limit: Optional LIMIT value ([begin,]max), if none, supply blank string.
      
   .. php:method:: pi_isOnlyFields(string $fList, int $lowerThan)
   
      Returns TRUE if the piVars array has ONLY those fields entered that is set in the $fList (commalist) AND if none of those fields value is greater than $lowerThan field if they are integers.
      
      Notice that this function will only work as long as values are integers.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1227>`__.
      
      :param string $fList: List of fields (keys from piVars) to evaluate on
      :param int $lowerThan: Limit for the values.
      
   .. php:method:: pi_autoCache(array $inArray)
   
      Returns TRUE if the array $inArray contains only values allowed to be cached based on the configuration in $this->pi_autoCacheFields
      Used by ->pi_linkTP_keepPIvars
      This is an advanced form of evaluation of whether a URL should be cached or not.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1253>`__.
      
      :param array $inArray: An array with piVars values to evaluate
      
   .. php:method:: pi_RTEcssText(string $str)
   
      Will process the input string with the parseFunc function from ContentObjectRenderer based on configuration
      set in "lib.parseFunc_RTE" in the current TypoScript template.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1284>`__.
      
      :param string $str: The input text string to process
      
   .. php:method:: pi_initPIflexForm(string $field)
   
      Converts $this->cObj->data['pi_flexform'] from XML string to flexForm array.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1300>`__.
      
      :param string $field: Field name to convert
      
   .. php:method:: pi_getFFvalue(array $T3FlexForm_array, string $fieldName, string $sheet, string $lang, string $value)
   
      Return value from somewhere inside a FlexForm structure
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/Plugin/AbstractPlugin.php#L1321>`__.
      
      :param array $T3FlexForm_array: FlexForm data
      :param string $fieldName: Field name to extract. Can be given like "test/el/2/test/el/field_templateObject" where each part will dig a level deeper in the FlexForm data.
      :param string $sheet: Sheet pointer, eg. "sDEF
      :param string $lang: Language pointer, eg. "lDEF
      :param string $value: Value pointer, eg. "vDEF
