.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Frontend\ContentObject

.. php:class:: ContentObjectRenderer

   This class contains all main TypoScript features.
   
   This includes the rendering of TypoScript content objects (cObjects).
   Is the backbone of TypoScript Template rendering.
   
   There are lots of functions you can use from your include-scripts.
   The class is normally instantiated and referred to as "cObj".
   When you call your own PHP-code typically through a USER or USER_INT cObject then it is this class that instantiates the object and calls the main method. Before it does so it will set (if you are using classes) a reference to itself in the internal variable "cObj" of the object. Thus you can access all functions and data from this class by $this->cObj->... from within you classes written to be USER or USER_INT content objects.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php>`__.

   .. php:const:: OBJECTTYPE_USER_INT
   
      :php:`1`, type integer
      
      .. php:const:: OBJECTTYPE_USER
   
      :php:`2`, type integer
      
      
   .. php:attr:: stdWrapOrder
   
      stdWrap functions in their correct order
      
      
   .. php:attr:: data
   
      Loaded with the current data-record.
      
      If the instance of this class is used to render records from the database those records are found in this array.
      The function stdWrap has TypoScript properties that fetch field-data from this array.
      
      
   .. php:attr:: parameters
   
      Used by the parseFunc function and is loaded with tag-parameters when parsing tags.
      
      
   .. php:attr:: currentValKey
   
      
   .. php:attr:: currentRecord
   
      This is set to the [table]:[uid] of the record delivered in the $data-array, if the cObjects CONTENT or RECORD is in operation.
      
      Note that $GLOBALS['TSFE']->currentRecord is set to an equal value but always indicating the latest record rendered.
      
      
   .. php:attr:: currentRecordNumber
   
      Incremented in RecordsContentObject and ContentContentObject before each record rendering.
      
      
   .. php:attr:: parentRecordNumber
   
      Incremented in RecordsContentObject and ContentContentObject before each record rendering.
      
      
   .. php:attr:: parentRecord
   
      If the ContentObjectRender was started from ContentContentObject, RecordsContentObject or SearchResultContentObject this array has two keys, 'data' and 'currentRecord' which indicates the record and data for the parent cObj.
      
      
   .. php:attr:: checkPid_badDoktypeList
   
      
   .. php:attr:: lastTypoLinkUrl
   
      This will be set by typoLink() to the url of the most recent link created.
      
      
   .. php:attr:: lastTypoLinkTarget
   
      DO. link target.
      
      
   .. php:attr:: lastTypoLinkLD
   
      
   .. php:attr:: lastTypoLinkResult
   
      
   .. php:attr:: doConvertToUserIntObject
   
      Set to TRUE by doConvertToUserIntObject() if USER object wants to become USER_INT
      
      
   .. php:method:: setRequest(Psr\\Http\\Message\\ServerRequestInterface request)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L421>`__.
      
      :param Psr\\Http\\Message\\ServerRequestInterface $request: the request
      
   .. php:method:: __sleep()
   
      Prevent several objects from being serialized.
      
      If currentFile is set, it is either a File or a FileReference object. As the object itself can't be serialized,
      we have store a hash and restore the object in __wakeup()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L433>`__.
      
      
   .. php:method:: __wakeup()
   
      Restore currentFile from hash.
      
      If currentFile references a File, the identifier equals file identifier.
      If it references a FileReference the identifier equals the uid of the reference.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L452>`__.
      
      
   .. php:method:: start(array $data, string $table)
   
      Class constructor.
      
      Well, it has to be called manually since it is not a real constructor function.
      So after making an instance of the class, call this function and pass to it a database record and the tablename from where the record is from. That will then become the "current" record loaded into memory and accessed by the .fields property found in eg. stdWrap.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L486>`__.
      
      :param array $data: The record data that is rendered.
      :param string $table: The table that the data record is from.
      
   .. php:method:: getCurrentTable()
   
      Returns the current table
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L517>`__.
      
      
   .. php:method:: getCurrentVal()
   
      Returns the "current" value.
      
      The "current" value is just an internal variable that can be used by functions to pass a single value on to another function later in the TypoScript processing.
      It's like "load accumulator" in the good old C64 days... basically a "register" you can use as you like.
      The TSref will tell if functions are setting this value before calling some other object so that you know if it holds any special information.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L572>`__.
      
      
   .. php:method:: setCurrentVal(mixed $value)
   
      Sets the "current" value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L583>`__.
      
      :param mixed $value: The variable that you want to set as "current
      
   .. php:method:: cObjGet(array $setup, string $addKey)
   
      Rendering of a "numerical array" of cObjects from TypoScript
      Will call ->cObjGetSingle() for each cObject found and accumulate the output.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L597>`__.
      
      :param array $setup: array with cObjects as values.
      :param string $addKey: A prefix for the debugging information
      
   .. php:method:: cObjGetSingle(string $name, array $conf, string $TSkey)
   
      Renders a content object
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L623>`__.
      
      :param string $name: The content object name, eg. "TEXT" or "USER" or "IMAGE"
      :param array $conf: The array with TypoScript properties for the content object
      :param string $TSkey: A string label used for the internal debugging tracking.
      
   .. php:method:: getContentObject()
   
      Returns a new content object of type $name.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L662>`__.
      
      
   .. php:method:: render(\AbstractContentObject $contentObject, array $configuration)
   
      Renders a content object by taking exception and cache handling
      into consideration
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L687>`__.
      
      :param \AbstractContentObject $contentObject: Content object instance
      :param array $configuration: Array of TypoScript properties
      
   .. php:method:: getUserObjectType()
   
      Retrieves a type of object called as USER or USER_INT. Object can detect their
      type by using this call. It returns OBJECTTYPE_USER_INT or OBJECTTYPE_USER depending on the
      current object execution. In all other cases it will return FALSE to indicate
      a call out of context.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L811>`__.
      
      
   .. php:method:: setUserObjectType()
   
      Sets the user object type
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L821>`__.
      
      
   .. php:method:: convertToUserIntObject()
   
      Requests the current USER object to be converted to USER_INT.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L829>`__.
      
      
   .. php:method:: readFlexformIntoConf(string|array $flexData, array $conf, bool $recursive)
   
      Converts a given config in Flexform to a conf-array
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L850>`__.
      
      :param string|array $flexData: Flexform data
      :param array $conf: Array to write the data into, by reference
      :param bool $recursive: Is set if called recursive. Don't call function with this parameter, it's used inside the function only
      
   .. php:method:: lastChanged(int $tstamp)
   
      Sets the SYS_LASTCHANGED timestamp if input timestamp is larger than current value.
      
      The SYS_LASTCHANGED timestamp can be used by various caching/indexing applications to determine if the page has new content.
      Therefore you should call this function with the last-changed timestamp of any element you display.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1080>`__.
      
      :param int $tstamp: Unix timestamp (number of seconds since 1970)
      
   .. php:method:: getATagParams(array $conf)
   
      An abstraction method to add parameters to an A tag.
      
      Uses the ATagParams property, also includes the global TypoScript config.ATagParams
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1098>`__.
      
      :param array $conf: TypoScript configuration properties
      
   .. php:method:: setCurrentFile(\File|\FileReference|\Folder|string|null $fileObject)
   
      Sets the current file object during iterations over files.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1125>`__.
      
      :param \File|\FileReference|\Folder|string|null $fileObject: The file object.
      
   .. php:method:: getCurrentFile()
   
      Gets the current file object during iterations over files.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1135>`__.
      
      
   .. php:method:: stdWrap(string $content, array $conf)
   
      The "stdWrap" function. This is the implementation of what is known as "stdWrap properties" in TypoScript.
      
      Basically "stdWrap" performs some processing of a value based on properties in the input $conf array(holding the TypoScript "stdWrap properties")
      See the link below for a complete list of properties and what they do. The order of the table with properties found in TSref (the link) follows the actual order of implementation in this function.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1154>`__.
      
      :param string $content: Input value undergoing processing in this function. Possibly substituted by other values fetched from another source.
      :param array $conf: TypoScript "stdWrap properties".
      
   .. php:method:: stdWrapValue(string $key, array $config, string|int|bool|null $defaultValue)
   
      Gets a configuration value by passing them through stdWrap first and taking a default value if stdWrap doesn't yield a result.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1249>`__.
      
      :param string $key: The config variable key (from TS array).
      :param array $config: The TypoScript array.
      :param string|int|bool|null $defaultValue: Optional default value.
      
   .. php:method:: stdWrap_stdWrapPreProcess(string $content, array $conf)
   
      stdWrap pre process hook
      can be used by extensions authors to modify the behaviour of stdWrap functions to their needs
      this hook will execute functions before any other stdWrap function can modify anything
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1274>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_cacheRead(string $content, array $conf)
   
      Check if content was cached before (depending on the given cache key)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1290>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_addPageCacheTags(string $content, array $conf)
   
      Add tags to page cache (comma-separated list)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1306>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_setContentToCurrent(string $content)
   
      setContentToCurrent
      actually it just does the contrary: Sets the value of 'current' based on current content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1323>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_setCurrent(string $content, array $conf)
   
      setCurrent
      Sets the value of 'current' based on the outcome of stdWrap operations
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1337>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for setCurrent.
      
   .. php:method:: stdWrap_lang(string $content, array $conf)
   
      lang
      Translates content based on the language currently used by the FE
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1351>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for lang.
      
   .. php:method:: stdWrap_data(string $_, array $conf)
   
      Gets content from different sources based on getText functions.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1379>`__.
      
      :param string $_: Unused
      :param array $conf: stdWrap properties for data.
      
   .. php:method:: stdWrap_field(string $content, array $conf)
   
      field
      Gets content from a DB field
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1392>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for field.
      
   .. php:method:: stdWrap_current(string $content, array $conf)
   
      current
      Gets content that has been previously set as 'current'
      Can be set via setContentToCurrent or setCurrent or will be set automatically i.e. inside the split function
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1406>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for current.
      
   .. php:method:: stdWrap_cObject(string $content, array $conf)
   
      cObject
      Will replace the content with the value of an official TypoScript cObject
      like TEXT, COA, HMENU
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1420>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for cObject.
      
   .. php:method:: stdWrap_numRows(string $content, array $conf)
   
      numRows
      Counts the number of returned records of a DB operation
      makes use of select internally
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1434>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for numRows.
      
   .. php:method:: stdWrap_preUserFunc(string $content, array $conf)
   
      preUserFunc
      Will execute a user public function before the content will be modified by any other stdWrap function
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1447>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for preUserFunc.
      
   .. php:method:: stdWrap_stdWrapOverride(string $content, array $conf)
   
      stdWrap override hook
      can be used by extensions authors to modify the behaviour of stdWrap functions to their needs
      this hook will execute functions on existing content but still before the content gets modified or replaced
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1461>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_override(string $content, array $conf)
   
      override
      Will override the current value of content with its own value'
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1478>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for override.
      
   .. php:method:: stdWrap_preIfEmptyListNum(string $content, array $conf)
   
      preIfEmptyListNum
      Gets a value off a CSV list before the following ifEmpty check
      Makes sure that the result of ifEmpty will be TRUE in case the CSV does not contain a value at the position given by preIfEmptyListNum
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1495>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for preIfEmptyListNum.
      
   .. php:method:: stdWrap_ifNull(string|null $content, array $conf)
   
      ifNull
      Will set content to a replacement value in case the value of content is NULL
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1508>`__.
      
      :param string|null $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for ifNull.
      
   .. php:method:: stdWrap_ifEmpty(string $content, array $conf)
   
      ifEmpty
      Will set content to a replacement value in case the trimmed value of content returns FALSE
      0 (zero) will be replaced as well
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1522>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for ifEmpty.
      
   .. php:method:: stdWrap_ifBlank(string $content, array $conf)
   
      ifBlank
      Will set content to a replacement value in case the trimmed value of content has no length
      0 (zero) will not be replaced
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1539>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for ifBlank.
      
   .. php:method:: stdWrap_listNum(string $content, array $conf)
   
      listNum
      Gets a value off a CSV list after ifEmpty check
      Might return an empty value in case the CSV does not contain a value at the position given by listNum
      Use preIfEmptyListNum to avoid that behaviour
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1557>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for listNum.
      
   .. php:method:: stdWrap_trim(string $content)
   
      trim
      Cuts off any whitespace at the beginning and the end of the content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1569>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_strPad(string $content, array $conf)
   
      strPad
      Will return a string padded left/right/on both sides, based on configuration given as stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1582>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for strPad.
      
   .. php:method:: stdWrap_stdWrap(string $content, array $conf)
   
      stdWrap
      A recursive call of the stdWrap function set
      This enables the user to execute stdWrap functions in another than the predefined order
      It modifies the content, not the property
      while the new feature of chained stdWrap functions modifies the property and not the content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1613>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for stdWrap.
      
   .. php:method:: stdWrap_stdWrapProcess(string $content, array $conf)
   
      stdWrap process hook
      can be used by extensions authors to modify the behaviour of stdWrap functions to their needs
      this hook executes functions directly after the recursive stdWrap function call but still before the content gets modified
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1627>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_required(string $content)
   
      required
      Will immediately stop rendering and return an empty value
      when there is no content at this point
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1644>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_if(string $content, array $conf)
   
      if
      Will immediately stop rendering and return an empty value
      when the result of the checks returns FALSE
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1662>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for if.
      
   .. php:method:: stdWrap_fieldRequired(string $content, array $conf)
   
      fieldRequired
      Will immediately stop rendering and return an empty value
      when there is no content in the field given by fieldRequired
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1680>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for fieldRequired.
      
   .. php:method:: stdWrap_csConv(string $content, array $conf)
   
      stdWrap csConv: Converts the input to UTF-8
      
      The character set of the input must be specified. Returns the input if
      matters go wrong, for example if an invalid character set is given.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1699>`__.
      
      :param string $content: The string to convert.
      :param array $conf: stdWrap properties for csConv.
      
   .. php:method:: stdWrap_parseFunc(string $content, array $conf)
   
      parseFunc
      Will parse the content based on functions given as stdWrap properties
      Heavily used together with RTE based content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1717>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for parseFunc.
      
   .. php:method:: stdWrap_HTMLparser(string $content, array $conf)
   
      HTMLparser
      Will parse HTML content based on functions given as stdWrap properties
      Heavily used together with RTE based content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1731>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for HTMLparser.
      
   .. php:method:: stdWrap_split(string $content, array $conf)
   
      split
      Will split the content by a given token and treat the results separately
      Automatically fills 'current' with a single result
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1748>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for split.
      
   .. php:method:: stdWrap_replacement(string $content, array $conf)
   
      replacement
      Will execute replacements on the content (optionally with preg-regex)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1761>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for replacement.
      
   .. php:method:: stdWrap_prioriCalc(string $content, array $conf)
   
      prioriCalc
      Will use the content as a mathematical term and calculate the result
      Can be set to 1 to just get a calculated value or 'intval' to get the integer of the result
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1775>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for prioriCalc.
      
   .. php:method:: stdWrap_char(string $content, array $conf)
   
      char
      Returns a one-character string containing the character specified by ascii code.
      
      Reliable results only for character codes in the integer range 0 - 127.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1795>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for char.
      
   .. php:method:: stdWrap_intval(string $content)
   
      intval
      Will return an integer value of the current content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1807>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_hash(string $content, array $conf)
   
      Will return a hashed value of the current content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1820>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for hash.
      
   .. php:method:: stdWrap_round(string $content, array $conf)
   
      stdWrap_round will return a rounded number with ceil(), floor() or round(), defaults to round()
      Only the english number format is supported . (dot) as decimal point
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1838>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for round.
      
   .. php:method:: stdWrap_numberFormat(string $content, array $conf)
   
      numberFormat
      Will return a formatted number based on configuration given as stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1851>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for numberFormat.
      
   .. php:method:: stdWrap_expandList(string $content)
   
      expandList
      Will return a formatted number based on configuration given as stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1863>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_date(string $content, array $conf)
   
      date
      Will return a formatted date based on configuration given according to PHP date/gmdate properties
      Will return gmdate when the property GMT returns TRUE
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1877>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for date.
      
   .. php:method:: stdWrap_strftime(string $content, array $conf)
   
      strftime
      Will return a formatted date based on configuration given according to PHP strftime/gmstrftime properties
      Will return gmstrftime when the property GMT returns TRUE
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1895>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for strftime.
      
   .. php:method:: stdWrap_strtotime(string $content, array $conf)
   
      strtotime
      Will return a timestamp based on configuration given according to PHP strtotime
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1917>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for strtotime.
      
   .. php:method:: stdWrap_age(string $content, array $conf)
   
      age
      Will return the age of a given timestamp based on configuration given by stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1933>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for age.
      
   .. php:method:: stdWrap_case(string $content, array $conf)
   
      case
      Will transform the content to be upper or lower case only
      Leaves HTML tags untouched
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1947>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for case.
      
   .. php:method:: stdWrap_bytes(string $content, array $conf)
   
      bytes
      Will return the size of a given number in Bytes	 *
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1960>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for bytes.
      
   .. php:method:: stdWrap_substring(string $content, array $conf)
   
      substring
      Will return a substring based on position information given by stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1973>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for substring.
      
   .. php:method:: stdWrap_cropHTML(string $content, array $conf)
   
      cropHTML
      Crops content to a given size while leaving HTML tags untouched
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1986>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for cropHTML.
      
   .. php:method:: stdWrap_stripHtml(string $content)
   
      stripHtml
      Completely removes HTML tags from content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L1998>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_crop(string $content, array $conf)
   
      crop
      Crops content to a given size without caring about HTML tags
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2011>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for crop.
      
   .. php:method:: stdWrap_rawUrlEncode(string $content)
   
      rawUrlEncode
      Encodes content to be used within URLs
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2023>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_htmlSpecialChars(string $content, array $conf)
   
      htmlSpecialChars
      Transforms HTML tags to readable text by replacing special characters with their HTML entity
      When preserveEntities returns TRUE, existing entities will be left untouched
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2037>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for htmlSpecialChars.
      
   .. php:method:: stdWrap_encodeForJavaScriptValue(string $content)
   
      encodeForJavaScriptValue
      Escapes content to be used inside JavaScript strings. Single quotes are added around the value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2054>`__.
      
      :param string $content: Input value undergoing processing in this function
      
   .. php:method:: stdWrap_doubleBrTag(string $content, array $conf)
   
      doubleBrTag
      Searches for double line breaks and replaces them with the given value
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2067>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for doubleBrTag.
      
   .. php:method:: stdWrap_br(string $content)
   
      br
      Searches for single line breaks and replaces them with a <br />/<br> tag
      according to the doctype
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2080>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_brTag(string $content, array $conf)
   
      brTag
      Searches for single line feeds and replaces them with the given value
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2093>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for brTag.
      
   .. php:method:: stdWrap_encapsLines(string $content, array $conf)
   
      encapsLines
      Modifies text blocks by searching for lines which are not surrounded by HTML tags yet
      and wrapping them with values given by stdWrap properties
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2107>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for erncapsLines.
      
   .. php:method:: stdWrap_keywords(string $content)
   
      keywords
      Transforms content into a CSV list to be used i.e. as keywords within a meta tag
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2119>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_innerWrap(string $content, array $conf)
   
      innerWrap
      First of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      See wrap
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2133>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for innerWrap.
      
   .. php:method:: stdWrap_innerWrap2(string $content, array $conf)
   
      innerWrap2
      Second of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      See wrap
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2147>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for innerWrap2.
      
   .. php:method:: stdWrap_preCObject(string $content, array $conf)
   
      preCObject
      A content object that is prepended to the current content but between the innerWraps and the rest of the wraps
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2160>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for preCObject.
      
   .. php:method:: stdWrap_postCObject(string $content, array $conf)
   
      postCObject
      A content object that is appended to the current content but between the innerWraps and the rest of the wraps
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2173>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for postCObject.
      
   .. php:method:: stdWrap_wrapAlign(string $content, array $conf)
   
      wrapAlign
      Wraps content with a div container having the style attribute text-align set to the given value
      See wrap
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2187>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for wrapAlign.
      
   .. php:method:: stdWrap_typolink(string $content, array $conf)
   
      typolink
      Wraps the content with a link tag
      URLs and other attributes are created automatically by the values given in the stdWrap properties
      See wrap
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2206>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for typolink.
      
   .. php:method:: stdWrap_wrap(string $content, array $conf)
   
      wrap
      This is the "mother" of all wraps
      Third of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      Basically it will put additional content before and after the current content using a split character as a placeholder for the current content
      The default split character is | but it can be replaced with other characters by the property splitChar
      Any other wrap that does not have own splitChar settings will be using the default split char though
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2223>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for wrap.
      
   .. php:method:: stdWrap_noTrimWrap(string $content, array $conf)
   
      noTrimWrap
      Fourth of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      The major difference to any other wrap is, that this one can make use of whitespace without trimming	 *
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2241>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for noTrimWrap.
      
   .. php:method:: stdWrap_wrap2(string $content, array $conf)
   
      wrap2
      Fifth of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      The default split character is | but it can be replaced with other characters by the property splitChar
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2266>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for wrap2.
      
   .. php:method:: stdWrap_dataWrap(string $content, array $conf)
   
      dataWrap
      Sixth of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      Can fetch additional content the same way data does (i.e. {field:whatever}) and apply it to the wrap before that is applied to the content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2284>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for dataWrap.
      
   .. php:method:: stdWrap_prepend(string $content, array $conf)
   
      prepend
      A content object that will be prepended to the current content after most of the wraps have already been applied
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2297>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for prepend.
      
   .. php:method:: stdWrap_append(string $content, array $conf)
   
      append
      A content object that will be appended to the current content after most of the wraps have already been applied
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2310>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for append.
      
   .. php:method:: stdWrap_wrap3(string $content, array $conf)
   
      wrap3
      Seventh of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      The default split character is | but it can be replaced with other characters by the property splitChar
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2324>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for wrap3.
      
   .. php:method:: stdWrap_orderedStdWrap(string $content, array $conf)
   
      orderedStdWrap
      Calls stdWrap for each entry in the provided array
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2341>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for orderedStdWrap.
      
   .. php:method:: stdWrap_outerWrap(string $content, array $conf)
   
      outerWrap
      Eighth of a set of different wraps which will be applied in a certain order before or after other functions that modify the content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2358>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for outerWrap.
      
   .. php:method:: stdWrap_insertData(string $content)
   
      insertData
      Can fetch additional content the same way data does and replaces any occurrence of {field:whatever} with this content
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2370>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_postUserFunc(string $content, array $conf)
   
      postUserFunc
      Will execute a user function after the content has been modified by any other stdWrap function
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2383>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for postUserFunc.
      
   .. php:method:: stdWrap_postUserFuncInt(string $content, array $conf)
   
      postUserFuncInt
      Will execute a user function after the content has been created and each time it is fetched from Cache
      The result of this function itself will not be cached
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2397>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for postUserFuncInt.
      
   .. php:method:: stdWrap_prefixComment(string $content, array $conf)
   
      prefixComment
      Will add HTML comments to the content to make it easier to identify certain content elements within the HTML output later on
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2419>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for prefixComment.
      
   .. php:method:: stdWrap_htmlSanitize(string content = '', array conf = array (
   ))
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2430>`__.
      
      :param string $content: the content, default: ''
      :param array $conf: the conf, default: array (
      )
      :returntype: string
      
   .. php:method:: stdWrap_cacheStore(string $content, array $conf)
   
      Store content into cache
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2453>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_stdWrapPostProcess(string $content, array $conf)
   
      stdWrap post process hook
      can be used by extensions authors to modify the behaviour of stdWrap functions to their needs
      this hook executes functions at after the content has been modified by the rest of the stdWrap functions but still before debugging
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2488>`__.
      
      :param string $content: Input value undergoing processing in these functions.
      :param array $conf: All stdWrap properties, not just the ones for a particular function.
      
   .. php:method:: stdWrap_debug(string $content)
   
      debug
      Will output the content as readable HTML code
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2504>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: stdWrap_debugFunc(string $content, array $conf)
   
      debugFunc
      Will output the content in a debug table
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2517>`__.
      
      :param string $content: Input value undergoing processing in this function.
      :param array $conf: stdWrap properties for debugFunc.
      
   .. php:method:: stdWrap_debugData(string $content)
   
      debugData
      Will output the data used by the current record in a debug table
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2530>`__.
      
      :param string $content: Input value undergoing processing in this function.
      
   .. php:method:: listNum(string $content, string $listNum, string $char)
   
      Exploding a string by the $char value (if integer its an ASCII value) and returning index $listNum
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2561>`__.
      
      :param string $content: String to explode
      :param string $listNum: Index-number. You can place the word "last" in it and it will be substituted with the pointer to the last value. You can use math operators like "+-/*" (passed to calc())
      :param string $char: Either a string used to explode the content string or an integer value which will then be changed into a character, eg. "10" for a linebreak char.
      
   .. php:method:: checkIf(array $conf)
   
      Compares values together based on the settings in the input TypoScript array and returns the comparison result.
      
      Implements the "if" function in TYPO3 TypoScript
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2589>`__.
      
      :param array $conf: TypoScript properties defining what to compare
      
   .. php:method:: HTMLparser_TSbridge(string $theValue, array $conf)
   
      Passes the input value, $theValue, to an instance of "\TYPO3\CMS\Core\Html\HtmlParser"
      together with the TypoScript options which are first converted from a TS style array
      to a set of arrays with options for the \TYPO3\CMS\Core\Html\HtmlParser class.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2673>`__.
      
      :param string $theValue: The value to parse by the class \TYPO3\CMS\Core\Html\HtmlParser
      :param array $conf: TypoScript properties for the parser. See link.
      
   .. php:method:: dataWrap(string $content, string $wrap)
   
      Wrapping input value in a regular "wrap" but parses the wrapping value first for "insertData" codes.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2689>`__.
      
      :param string $content: Input string being wrapped
      :param string $wrap: The wrap string, eg. "<strong></strong>" or more likely here '<a href="index.php?id={TSFE:id}"> | </a>' which will wrap the input string in a <a> tag linking to the current page.
      
   .. php:method:: insertData(string $str)
   
      Implements the "insertData" property of stdWrap meaning that if strings matching {...} is found in the input string they
      will be substituted with the return value from getData (datatype) which is passed the content of the curly braces.
      
      If the content inside the curly braces starts with a hash sign {#...} it is a field name that must be quoted by Doctrine
      DBAL and is skipped here for later processing.
      
      Example: If input string is "This is the page title: {page:title}" then the part, '{page:title}', will be substituted with
      the current pages title field value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2709>`__.
      
      :param string $str: Input value
      
   .. php:method:: prefixComment(string $str, array $conf, string $content)
   
      Returns a HTML comment with the second part of input string (divided by "|") where first part is an integer telling how many trailing tabs to put before the comment on a new line.
      
      Notice; this function (used by stdWrap) can be disabled by a "config.disablePrefixComment" setting in TypoScript.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2746>`__.
      
      :param string $str: Input value
      :param array $conf: TypoScript Configuration (not used at this point.)
      :param string $content: The content to wrap the comment around.
      
   .. php:method:: calc(string $val)
   
      Performs basic mathematical evaluation of the input string. Does NOT take parenthesis and operator precedence into account! (for that, see \TYPO3\CMS\Core\Utility\MathUtility::calculateWithPriorityToAdditionAndSubtraction())
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L2989>`__.
      
      :param string $val: The string to evaluate. Example: "3+4*10/5" will generate "35". Only integer numbers can be used.
      
   .. php:method:: numberFormat(float $content, array $conf)
   
      Implements the stdWrap property "numberFormat"
      This is a Wrapper function for php's number_format()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L3214>`__.
      
      :param float $content: Value to process
      :param array $conf: TypoScript Configuration for numberFormat
      
   .. php:method:: parseFunc(string $theValue, non-empty-array<string, mixed>|null, non-empty-string|null $ref)
   
      Implements the stdWrap property, "parseFunc".
      
      This is a function with a lot of interesting uses. In classic TypoScript this is used to process text
      from the bodytext field; This included highlighting of search words, changing http:// and mailto: prefixed strings into etc.
      It is still a very important function for processing of bodytext which is normally stored in the database
      in a format which is not fully ready to be outputted.
      This situation has not become better by having a RTE around...
      
      This function is actually just splitting the input content according to the configuration of "external blocks".
      This means that before the input string is actually "parsed" it will be splitted into the parts configured to BE parsed
      (while other parts/blocks should NOT be parsed).
      Therefore the actual processing of the parseFunc properties goes on in ->_parseFunc()
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L3241>`__.
      
      :param string $theValue: The value to process.
      :param non-empty-array<string, mixed>|null: $conf TypoScript configuration for parseFunc
      :param non-empty-string|null $ref: Reference to get configuration from. Eg. "< lib.parseFunc" which means that the configuration of the object path "lib.parseFunc" will be retrieved and MERGED with what is in $conf!
      
   .. php:method:: http_makelinks(string $data, array $conf)
   
      Finds URLs in text and makes it to a real link.
      
      Will find all strings prefixed with "http://" and "https://" in the $data string and make them into a link,
      linking to the URL we should have found.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L3702>`__.
      
      :param string $data: The string in which to search for "http://
      :param array $conf: Configuration for makeLinks, see link
      
   .. php:method:: mailto_makelinks(string $data, array $conf)
   
      Will find all strings prefixed with "mailto:" in the $data string and make them into a link,
      linking to the email address they point to.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L3756>`__.
      
      :param string $data: The string in which to search for "mailto:
      :param array $conf: Configuration for makeLinks, see link
      
   .. php:method:: getImgResource(string|\File|\FileReference $file, array $fileArray)
   
      Creates and returns a TypoScript "imgResource".
      
      The value ($file) can either be a file reference (TypoScript resource) or the string "GIFBUILDER".
      In the first case a current image is returned, possibly scaled down or otherwise processed.
      In the latter case a GIFBUILDER image is returned; This means an image is made by TYPO3 from layers of elements as GIFBUILDER defines.
      In the function IMG_RESOURCE() this function is called like $this->getImgResource($conf['file'], $conf['file.']);
      
      Structure of the returned info array:
       0 => width
       1 => height
       2 => file extension
       3 => file name
       origFile => original file name
       origFile_mtime => original file mtime
       -- only available if processed via FAL: --
       originalFile => original file object
       processedFile => processed file object
       fileCacheHash => checksum of processed file
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L3809>`__.
      
      :param string|\File|\FileReference $file: A "imgResource" TypoScript data type. Either a TypoScript file resource, a file or a file reference object or the string GIFBUILDER. See description above.
      :param array $fileArray: TypoScript properties for the imgResource type
      
   .. php:method:: getFieldVal(string $field)
   
      Returns the value for the field from $this->data. If "//" is found in the $field value that token will split the field values apart and the first field having a non-blank value will be returned.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4043>`__.
      
      :param string $field: The fieldname, eg. "title" or "navtitle // title" (in the latter case the value of $this->data[navtitle] is returned if not blank, otherwise $this->data[title] will be)
      
   .. php:method:: getData(string $string, array|null $fieldArray)
   
      Implements the TypoScript data type "getText". This takes a string with parameters and based on those a value from somewhere in the system is returned.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4066>`__.
      
      :param string $string: The parameter string, eg. "field : title" or "field : navtitle // field : title" (in the latter case and example of how the value is FIRST splitted by "//" is shown)
      :param array|null $fieldArray: Alternative field array; If you set this to an array this variable will be used to look up values for the "field" key. Otherwise the current page record in $GLOBALS['TSFE']->page is used.
      
   .. php:method:: getGlobal(string $keyString, array $source)
   
      Return global variable where the input string $var defines array keys separated by "|"
      Example: $var = "HTTP_SERVER_VARS | something" will return the value $GLOBALS['HTTP_SERVER_VARS']['something'] value
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4395>`__.
      
      :param string $keyString: Global var key, eg. "HTTP_GET_VAR" or "HTTP_GET_VARS|id" to get the GET parameter "id" back.
      :param array $source: Alternative array than $GLOBAL to get variables from.
      
   .. php:method:: typoLink(string $linkText, array $conf)
   
      Implements the "typolink" property of stdWrap (and others)
      Basically the input string, $linkText, is (typically) wrapped in a <a>-tag linking to some page, email address,
      file or URL based on a parameter defined by the configuration array $conf.
      
      This function is best used from internal functions as is. There are some API functions defined after this
      function which is more suited for general usage in external applications.
      
      Generally the concept "typolink" should be used in your own applications as an API for making links to pages with
      parameters and more. The reason for this is that you will then automatically make links compatible with all the
      centralized functions for URL simulation and manipulation of parameters into hashes and more.
      
      For many more details on the parameters and how they are interpreted, please see the link to TSref below.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4466>`__.
      
      :param string $linkText: The string (text) to link
      :param array $conf: TypoScript configuration (see link below)
      
   .. php:method:: createLink(string $linkText, array $conf)
   
      Similar to ->typoLink(), however it does not evaluate the .wrap and .ATagBeforeWrap
      functionality.
      
      For this reason, it also does not consider the HtmlLinkResult functionality,
      and "returnLast" logic, as the whole LinkResult object is available.
      
      It is recommended to use this method when working with PHP and wanting to create
      a typolink, but be aware that you need to escape the Link yourself as PHP developer depending
      on the needs.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4512>`__.
      
      :param string $linkText: the text to be wrapped in a link
      :param array $conf: the typolink configuration
      :returntype: TYPO3\\CMS\\Frontend\\Typolink\\LinkResultInterface
      
   .. php:method:: createUrl(array $conf)
   
      This method creates a typoLink() and just returns the information of the "href" attribute
      of the link (most of the time, this is the URL).
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4544>`__.
      
      :param array $conf: the typolink configuration.
      :returntype: string
      :returns: The URL
      
   .. php:method:: typoLink_URL(array $conf)
   
      Based on the input "TypoLink" TypoScript configuration this will return the generated URL
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4561>`__.
      
      :param array $conf: TypoScript properties for "typolink"
      
   .. php:method:: getTypoLink(string $label, string $params, array|string $urlParameters, string $target)
   
      Returns a linked string made from typoLink parameters.
      
      This function takes $label as a string, wraps it in a link-tag based on the $params string, which should contain data like that you would normally pass to the popular <LINK>-tag in the TSFE.
      Optionally you can supply $urlParameters which is an array with key/value pairs that are rawurlencoded and appended to the resulting url.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4580>`__.
      
      :param string $label: Text string being wrapped by the link.
      :param string $params: Link parameter; eg. "123" for page id, "kasperYYYY@typo3.com" for email address, "http://...." for URL, "fileadmin/example.txt" for file.
      :param array|string $urlParameters: As an array key/value pairs represent URL parameters to set. Values NOT URL-encoded yet, keys should be URL-encoded if needed. As a string the parameter is expected to be URL-encoded already.
      :param string $target: Specific target set, if any. (Default is using the current)
      
   .. php:method:: getUrlToCurrentLocation(bool $addQueryString)
   
      Returns the canonical URL to the current "location", which include the current page ID and type
      and optionally the query string
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4609>`__.
      
      :param bool $addQueryString: Whether additional GET arguments in the query string should be included or not
      
   .. php:method:: getTypoLink_URL(string $params, array|string $urlParameters, string $target)
   
      Returns the URL of a "typolink" create from the input parameter string, url-parameters and target
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4635>`__.
      
      :param string $params: Link parameter; eg. "123" for page id, "kasperYYYY@typo3.com" for email address, "http://...." for URL, "fileadmin/example.txt" for file.
      :param array|string $urlParameters: As an array key/value pairs represent URL parameters to set. Values NOT URL-encoded yet, keys should be URL-encoded if needed. As a string the parameter is expected to be URL-encoded already.
      :param string $target: Specific target set, if any. (Default is using the current)
      
   .. php:method:: getMailTo(string $mailAddress, string $linktxt)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4662>`__.
      
      :param string $mailAddress: Email address
      :param string $linktxt: Link text, default will be the email address.
      
   .. php:method:: getQueryArguments(array $conf)
   
      Gets the query arguments and assembles them for URLs.
      
      Arguments may be removed or set, depending on configuration.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4676>`__.
      
      :param array $conf: Configuration
      
   .. php:method:: wrap(string $content, string $wrap, string $char)
   
      Wrapping a string.
      
      Implements the TypoScript "wrap" property.
      Example: $content = "HELLO WORLD" and $wrap = "<strong> | </strong>", result: "<strong>HELLO WORLD</strong>"
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4706>`__.
      
      :param string $content: The content to wrap
      :param string $wrap: The wrap value, eg. "<strong> | </strong>
      :param string $char: The char used to split the wrapping value, default is "|
      
   .. php:method:: noTrimWrap(string $content, string $wrap, string $char)
   
      Wrapping a string, preserving whitespace in wrap value.
      
      Notice that the wrap value uses part 1/2 to wrap (and not 0/1 which wrap() does)
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4725>`__.
      
      :param string $content: The content to wrap, eg. "HELLO WORLD
      :param string $wrap: The wrap value, eg. " | <strong> | </strong>
      :param string $char: The char used to split the wrapping value, default is "|"
      
   .. php:method:: callUserFunction(string $funcName, array $conf, mixed $content)
   
      Calling a user function/class-method
      Notice: For classes the instantiated object will have the internal variable, $cObj, set to be a *reference* to $this (the parent/calling object).
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4748>`__.
      
      :param string $funcName: The functionname, eg "user_myfunction" or "user_myclass->main". Notice that there are rules for the names of functions/classes you can instantiate. If a function cannot be called for some reason it will be seen in the TypoScript log in the AdminPanel.
      :param array $conf: The TypoScript configuration to pass the function
      :param mixed $content: The content payload to pass the function
      
   .. php:method:: keywords(string $content)
   
      Cleans up a string of keywords. Keywords at splitted by "," (comma)  ";" (semi colon) and linebreak
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4788>`__.
      
      :param string $content: String of keywords
      
   .. php:method:: caseshift(string $theValue, string $case)
   
      Changing character case of a string, converting typically used western charset characters as well.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4808>`__.
      
      :param string $theValue: The string to change case for.
      :param string $case: The direction; either "upper" or "lower
      
   .. php:method:: HTMLcaseshift(string $theValue, string $case)
   
      Shifts the case of characters outside of HTML tags in the input string
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4850>`__.
      
      :param string $theValue: The string to change case for.
      :param string $case: The direction; either "upper" or "lower
      
   .. php:method:: calcAge(int $seconds, string $labels)
   
      Returns the 'age' of the tstamp $seconds
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4878>`__.
      
      :param int $seconds: Seconds to return age for. Example: "70" => "1 min", "3601" => "1 hrs
      :param string $labels: The labels of the individual units. Defaults to : ' min| hrs| days| yrs'
      
   .. php:method:: mergeTSRef(array $confArr, string $prop)
   
      Resolves a TypoScript reference value to the full set of properties BUT overridden with any local properties set.
      
      So the reference is resolved but overlaid with local TypoScript properties of the reference value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4915>`__.
      
      :param array $confArr: The TypoScript array
      :param string $prop: The property name: If this value is a reference (eg. " < plugins.tx_something") then the reference will be retrieved and inserted at that position (into the properties only, not the value...) AND overlaid with the old properties if any.
      
   .. php:method:: getTreeList(int $id, int $depth, int $begin, bool $dontCheckEnableFields, string $addSelectFields, string $moreWhereClauses, array $prevId_array, int $recursionLevel)
   
      Generates a list of Page-uid's from $id. List does not include $id itself
      (unless the id specified is negative in which case it does!)
      The only pages WHICH PREVENTS DECENDING in a branch are
      - deleted pages,
      - pages in a recycler (doktype = 255) or of the Backend User Section (doktpe = 6) type
      - pages that has the extendToSubpages set, WHERE start/endtime, hidden
      and fe_users would hide the records.
      
      Apart from that, pages with enable-fields excluding them, will also be
      removed. HOWEVER $dontCheckEnableFields set will allow
      enableFields-excluded pages to be included anyway - including
      extendToSubpages sections!
      Mount Pages are also descended but notice that these ID numbers are not
      useful for links unless the correct MPvar is set.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L4970>`__.
      
      :param int $id: The id of the start page from which point in the page tree to descend. IF NEGATIVE the id itself is included in the end of the list (only if $begin is 0) AND the output does NOT contain a last comma. Recommended since it will resolve the input ID for mount pages correctly and also check if the start ID actually exists!
      :param int $depth: The number of levels to descend. If you want to descend infinitely, just set this to 100 or so. Should be at least "1" since zero will just make the function return (no descend...)
      :param int $begin: Is an optional integer that determines at which level in the tree to start collecting uid's. Zero means 'start right away', 1 = 'next level and out'
      :param bool $dontCheckEnableFields: See function description
      :param string $addSelectFields: Additional fields to select. Syntax: ",[fieldname],[fieldname],...
      :param string $moreWhereClauses: Additional where clauses. Syntax: " AND [fieldname]=[value] AND ...
      :param array $prevId_array: array of IDs from previous recursions. In order to prevent infinite loops with mount pages.
      :param int $recursionLevel: Internal: Zero for the first recursion, incremented for each recursive call.
      
   .. php:method:: searchWhere(string $searchWords, string $searchFieldList, string $searchTable)
   
      Generates a search where clause based on the input search words (AND operation - all search words must be found in record.)
      Example: The $sw is "content management, system" (from an input form) and the $searchFieldList is "bodytext,header" then the output will be ' AND (bodytext LIKE "%content%" OR header LIKE "%content%") AND (bodytext LIKE "%management%" OR header LIKE "%management%") AND (bodytext LIKE "%system%" OR header LIKE "%system%")'
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L5003>`__.
      
      :param string $searchWords: The search words. These will be separated by space and comma.
      :param string $searchFieldList: The fields to search in
      :param string $searchTable: The table name you search in (recommended for DBAL compliance. Will be prepended field names as well)
      
   .. php:method:: exec_getQuery(string $table, array $conf)
   
      Executes a SELECT query for records from $table and with conditions based on the configuration in the $conf array
      This function is preferred over ->getQuery() if you just need to create and then execute a query.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L5051>`__.
      
      :param string $table: The table name
      :param array $conf: The TypoScript configuration properties
      
   .. php:method:: getRecords(string $tableName, array $queryConfiguration)
   
      Executes a SELECT query for records from $table and with conditions based on the configuration in the $conf array
      and overlays with translation and version if available
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L5068>`__.
      
      :param string $tableName: the name of the TCA database table
      :param array $queryConfiguration: The TypoScript configuration properties, see .select in TypoScript reference
      
   .. php:method:: getRequest()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L5871>`__.
      
      :returntype: Psr\\Http\\Message\\ServerRequestInterface
      
   .. php:method:: setLogger()
   
      Sets a logger.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/frontend/Classes/ContentObject/ContentObjectRenderer.php#L21>`__.
