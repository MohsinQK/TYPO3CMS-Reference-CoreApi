.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Extbase\Property

.. php:class:: PropertyMapper

   The Property Mapper transforms simple types (arrays, strings, integers, floats, booleans) to objects or other simple types.
   
   It is used most prominently to map incoming HTTP arguments to objects.
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Property/PropertyMapper.php>`__.

   
   .. php:method:: convert(mixed $source, string $targetType, \PropertyMappingConfigurationInterface|null $configuration)
   
      Map $source to $targetType, and return the result
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Property/PropertyMapper.php#L56>`__.
      
      :param mixed $source: the source data to map. MUST be a simple type, NO object allowed!
      :param string $targetType: The type of the target; can be either a class name or a simple type.
      :param \PropertyMappingConfigurationInterface|null $configuration: Configuration for the property mapping. If NULL, the PropertyMappingConfigurationBuilder will create a default configuration.
      
   .. php:method:: getMessages()
   
      Get the messages of the last Property Mapping.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Property/PropertyMapper.php#L79>`__.
      
      :returntype: TYPO3\\CMS\\Extbase\\Error\\Result
      
   .. php:method:: resetMessages()
   
      Resets the messages of the last Property Mapping.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Property/PropertyMapper.php#L87>`__.
