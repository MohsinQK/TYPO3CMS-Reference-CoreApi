.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Extbase\Routing

.. php:class:: ExtbasePluginEnhancer

   Allows to have a plugin with multiple controllers + actions for one specific plugin that has a namespace.
   
   A typical configuration looks like this:
   
   routeEnhancers:
     BlogExample:
       type: Extbase
       extension: BlogExample
       plugin: Pi1
       routes:
         - { routePath: '/blog/{page}', _controller: 'Blog::list', _arguments: {'page': '@widget_0/currentPage'} }
         - { routePath: '/blog/{slug}', _controller: 'Blog::detail' }
       requirements:
         page: '[0-9]+'
         slug: '.*'
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php>`__.

   
   .. php:method:: enhanceForMatching(TYPO3\\CMS\\Core\\Routing\\RouteCollection collection)
   
      {@inheritdoc}
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L66>`__.
      
      :param TYPO3\\CMS\\Core\\Routing\\RouteCollection $collection: the collection
      
   .. php:method:: enhanceForGeneration(TYPO3\\CMS\\Core\\Routing\\RouteCollection collection, array originalParameters)
   
      {@inheritdoc}
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L115>`__.
      
      :param TYPO3\\CMS\\Core\\Routing\\RouteCollection $collection: the collection
      :param array $originalParameters: the originalParameters
      
   .. php:method:: inflateParameters(array $parameters, array $internals)
   
      A route has matched the controller/action combination, so ensure that these properties
      are set to tx_blogexample_pi1[controller] and tx_blogexample_pi1[action].
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L167>`__.
      
      :param array $parameters: Actual parameter payload to be used
      :param array $internals: Internal instructions (_route, _controller, ...)
      :returntype: array
      
   .. php:method:: buildResult(TYPO3\\CMS\\Core\\Routing\\Route route, array results, array remainingQueryParameters = array (
   ))
   
      {@inheritdoc}
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L62>`__.
      
      :param TYPO3\\CMS\\Core\\Routing\\Route $route: the route
      :param array $results: the results
      :param array $remainingQueryParameters: the remainingQueryParameters, default: array (
      )
      :returntype: TYPO3\\CMS\\Core\\Routing\\PageArguments
      
   .. php:method:: setAspects(array aspects)
   
      {@inheritdoc}
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L209>`__.
      
      :param array $aspects: the aspects
      
   .. php:method:: getAspects()
   
      {@inheritdoc}
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Routing/ExtbasePluginEnhancer.php#L217>`__.
      
      :returntype: array
