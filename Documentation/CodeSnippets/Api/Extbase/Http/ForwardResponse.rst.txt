.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. php:namespace::  TYPO3\CMS\Extbase\Http

.. php:class:: ForwardResponse

   
   
   See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php>`__.

   
   .. php:method:: withControllerName(string controllerName)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L37>`__.
      
      :param string $controllerName: the controllerName
      :returntype: self
      
   .. php:method:: withoutControllerName()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L44>`__.
      
      :returntype: self
      
   .. php:method:: withExtensionName(string extensionName)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L51>`__.
      
      :param string $extensionName: the extensionName
      :returntype: self
      
   .. php:method:: withoutExtensionName()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L58>`__.
      
      :returntype: self
      
   .. php:method:: withArguments(array arguments)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L65>`__.
      
      :param array $arguments: the arguments
      :returntype: self
      
   .. php:method:: withoutArguments()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L72>`__.
      
      :returntype: self
      
   .. php:method:: withArgumentsValidationResult(TYPO3\\CMS\\Extbase\\Error\\Result argumentsValidationResult)
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L79>`__.
      
      :param TYPO3\\CMS\\Extbase\\Error\\Result $argumentsValidationResult: the argumentsValidationResult
      :returntype: self
      
   .. php:method:: getActionName()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L86>`__.
      
      :returntype: string
      
   .. php:method:: getControllerName()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L91>`__.
      
      :returntype: string
      
   .. php:method:: getExtensionName()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L96>`__.
      
      :returntype: string
      
   .. php:method:: getArguments()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L101>`__.
      
      :returntype: array
      
   .. php:method:: getArgumentsValidationResult()
   
      
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L106>`__.
      
      :returntype: TYPO3\\CMS\\Extbase\\Error\\Result
      
   .. php:method:: getStatusCode()
   
      Gets the response status code.
      
      The status code is a 3-digit integer result code of the server's attempt
      to understand and satisfy the request.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L158>`__.
      
      
   .. php:method:: withStatus(int $code, string $reasonPhrase)
   
      Return an instance with the specified status code and, optionally, reason phrase.
      
      If no reason phrase is specified, implementations MAY choose to default
      to the RFC 7231 or IANA recommended reason phrase for the response's
      status code.
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return an instance that has the
      updated status and reason phrase.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L184>`__.
      
      :param int $code: The 3-digit integer result code to set.
      :param string $reasonPhrase: The reason phrase to use with the
      provided status code; if none is provided, implementations MAY
      use the defaults as suggested in the HTTP specification.
      
   .. php:method:: getReasonPhrase()
   
      Gets the response reason phrase associated with the status code.
      
      Because a reason phrase is not a required element in a response
      status line, the reason phrase value MAY be null. Implementations MAY
      choose to return the default RFC 7231 recommended reason phrase (or those
      listed in the IANA HTTP Status Code Registry) for the response's
      status code.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L208>`__.
      
      
   .. php:method:: getProtocolVersion()
   
      Retrieves the HTTP protocol version as a string.
      
      The string MUST contain only the HTTP version number (e.g., "1.1", "1.0").
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L63>`__.
      
      
   .. php:method:: withProtocolVersion(string $version)
   
      Return an instance with the specified HTTP protocol version.
      
      The version string MUST contain only the HTTP version number (e.g.,
      "1.1", "1.0").
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return an instance that has the
      new protocol version.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L81>`__.
      
      :param string $version: HTTP protocol version
      
   .. php:method:: getHeaders()
   
      Retrieves all message header values.
      
      The keys represent the header name as it will be sent over the wire, and
      each value is an array of strings associated with the header.
      
          // Represent the headers as a string
          foreach ($message->getHeaders() as $name => $values) {
              echo $name . ": " . implode(", ", $values);
          }
      
          // Emit headers iteratively:
          foreach ($message->getHeaders() as $name => $values) {
              foreach ($values as $value) {
                  header(sprintf('%s: %s', $name, $value), false);
              }
          }
      
      While header names are not case-sensitive, getHeaders() will preserve the
      exact case in which headers were originally specified.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L113>`__.
      
      
   .. php:method:: hasHeader(string $name)
   
      Checks if a header exists by the given case-insensitive name.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L126>`__.
      
      :param string $name: Case-insensitive header field name.
      
   .. php:method:: getHeader(string $name)
   
      Retrieves a message header value by the given case-insensitive name.
      
      This method returns an array of all the header values of the given
      case-insensitive header name.
      
      If the header does not appear in the message, this method MUST return an
      empty array.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L145>`__.
      
      :param string $name: Case-insensitive header field name.
      
   .. php:method:: getHeaderLine(string $name)
   
      Retrieves a comma-separated string of the values for a single header.
      
      This method returns all of the header values of the given
      case-insensitive header name as a string concatenated together using
      a comma.
      
      NOTE: Not all header values may be appropriately represented using
      comma concatenation. For such headers, use getHeader() instead
      and supply your own delimiter when concatenating.
      
      If the header does not appear in the message, this method MUST return
      an empty string.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L177>`__.
      
      :param string $name: Case-insensitive header field name.
      
   .. php:method:: withHeader(string $name, string|string[] $value)
   
      Return an instance with the provided value replacing the specified header.
      
      While header names are case-insensitive, the casing of the header will
      be preserved by this function, and returned from getHeaders().
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return an instance that has the
      new and/or updated header and value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L201>`__.
      
      :param string $name: Case-insensitive header field name.
      :param string|string[] $value: Header value(s).
      
   .. php:method:: withAddedHeader(string $name, string|string[] $value)
   
      Return an instance with the specified header appended with the given value.
      
      Existing values for the specified header will be maintained. The new
      value(s) will be appended to the existing list. If the header did not
      exist previously, it will be added.
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return an instance that has the
      new header and/or value.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L237>`__.
      
      :param string $name: Case-insensitive header field name to add.
      :param string|string[] $value: Header value(s).
      
   .. php:method:: withoutHeader(string $name)
   
      Return an instance without the specified header.
      
      Header resolution MUST be done without case-sensitivity.
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return an instance that removes
      the named header.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L268>`__.
      
      :param string $name: Case-insensitive header field name to remove.
      
   .. php:method:: getBody()
   
      Gets the body of the message.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L286>`__.
      
      
   .. php:method:: withBody(\Psr\Http\Message\StreamInterface $body)
   
      Return an instance with the specified message body.
      
      The body MUST be a StreamInterface object.
      
      This method MUST be implemented in such a way as to retain the
      immutability of the message, and MUST return a new instance that has the
      new body stream.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L307>`__.
      
      :param \Psr\Http\Message\StreamInterface $body: Body.
      
   .. php:method:: filter()
   
      Filter a header value
      
      Ensures CRLF header injection vectors are filtered.
      
      Per RFC 7230, only VISIBLE ASCII characters, spaces, and horizontal
      tabs are allowed in values; header continuations MUST consist of
      a single CRLF sequence followed by a space or horizontal tab.
      
      This method filters any values not allowed from the string, and is
      lossy.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L402>`__.
      
      
   .. php:method:: validateHeaderName()
   
      Check whether or not a header name is valid and throw an exception.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L443>`__.
      
      
   .. php:method:: isValidHeaderValue()
   
      Checks if an HTTP header value is valid.
      
      Per RFC 7230, only VISIBLE ASCII characters, spaces, and horizontal
      tabs are allowed in values; header continuations MUST consist of
      a single CRLF sequence followed by a space or horizontal tab.
      
      See source code on `GitHub <https://github.com/TYPO3/typo3/blob/main/typo3/sysext/extbase/Classes/Http/ForwardResponse.php#L461>`__.
